ressources:
  - url: /community/flex-horseshoe-card/flex-horseshoe-card.js
    type: module
  - url: /local/state-switch.js
    type: module
kiosk_mode:
  non_admin_settings:
    kiosk: true
decluttering_templates:
  frame:
    color_type: label-card
    styles:
      card:
        - padding: 0
        - background-color: transparent
        - opacity: 0.800%
        - margin: 0 auto
      grid:
        - grid-template-areas: '"buttons"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content
      custom_fields:
        buttons:
          - margin: 0
          - padding: 0.5em
          - position: relative
          - left: 0
  light_slider:
    card:
      type: custom:big-slider-card
      entity: '[[entity]]'
      name: '[[name]]'
      attribute: brightness
      transition: 0.3
      height: 75
      background_color: '[[background]]'
      color: '#ffd4c1'
      icon_color: var(--black)
      icon: '[[icon]]'
      show_percentage: true
      min: 0
      max: 100
      hold_time: 600
      settle_time: 3000
      tap_action:
        action: toggle
      hold_action:
        action: more-info
      card_mod:
        style: |
          {% if is_state('[[entity]]', 'on') %}
            #container{background:[[background]]!important;margin-bottom: 12px;}
            #name {color:var(--black)!important;font-size:14px!important;font-weight: 300!important;opacity:0.7}
            #percentage {font-size:16px!important;color: black!important;font-weight:500!important;}
            #slider {opacity: 0.8!important;background: var(--active-light)!important}
          {% else %}
            #container {background:[[background]]!important;margin-bottom: 12px;}
            #name {color:var(--gray800)!important;font-size:14px!important;font-weight: 300!important;opacity:0.7}
            #percentage {color:var(--gray800)!important;font-size:16px!important;font-weight:500!important;}
            #icon {color: var(--gray800)!important; opacity: 0.8!important;filter: none;}
          {% endif %}
  light_toggle:
    card:
      type: custom:button-card
      triggers_update: '[[entity]]'
      entity: '[[entity]]'
      name: '[[name]]'
      icon: '[[icon]]'
      show_label: true
      state:
        - value: 'on'
          label: 'On'
          styles:
            card:
              - background: var(--active-light)
        - value: 'off'
          label: 'Off'
          styles:
            card:
              - background: '[[background]]'
            name:
              - color: var(--gray800)
            label:
              - color: var(--gray800)
            icon:
              - color: var(--gray800)
        - value: unavailable
          label: Av
          styles:
            card:
              - background: '[[background]]'
            name:
              - color: var(--gray800)
            label:
              - color: var(--gray800)
            icon:
              - color: var(--gray800)
      styles:
        grid:
          - grid-template-columns: 54px 1fr
          - grid-template-areas: '"i n" "i l"'
        icon:
          - width: 24px
          - color: var(--black)
        img_cell:
          - justify-self: start
          - width: 24px
          - height: 24px
          - padding: 0 6px
        label:
          - justify-self: start
          - font-size: 16px
          - font-weight: 500
          - padding-top: 2px
          - color: var(--black)
        card:
          - padding: 18px
          - height: 75px
          - margin-bottom: 12px
        name:
          - justify-self: start
          - font-size: 14px
          - color: var(--black)
          - opacity: 0.7
          - padding-bottom: 2px
button_card_templates:
  my_menu_card_active:
    variables:
      toggle: input_boolean.lundi_toggle
    entity: null
    show_icon: false
    show_name: true
    show_state: true
    name: |
      [[[ 
        return String(entity.attributes.recette_nom)
          .replace(/&#39/g, "'")
          .replace(/(\d+-)/g, '<br>$1'); 
      ]]]
    custom_fields:
      details: |
        [[[ 
          return String(entity.attributes.recette_details)
            .replace(/&#39/g, "'")
            .replace(/(\d+-)/g, '<br>$1'); 
        ]]]
      ingredients: |
        [[[ 
          return String(entity.attributes.recette_ingredients)
            .replace(/&#39/g, "'")
            .replace(/(\d+-)/g, '<br>$1'); 
        ]]]
    styles:
      grid:
        - grid-template-areas: '"s n" "s ingredients" "s details"'
        - grid-template-rows: 1fr min-content
        - grid-template-columns: max-content 1fr
        - row-gap: 2px
      card:
        - padding: 15px
        - margin-top: 0px
        - background: var(--active-pop)
      state:
        - width: auto
        - color: var(--gray800)
        - border-right: 1px solid var(--gray800)
        - justify-self: start
        - text-align: left
        - height: 100%
        - font-weight: 500
        - font-size: 3em
        - text-transform: uppercase
        - padding-right: 15px
      name:
        - color: var(--gray800)
        - justify-self: start
        - align-self: center
        - text-align: left
        - font-size: 2em
        - font-weight: 500
        - padding-left: 10px
        - margin-bottom: 2px
      custom_fields:
        ingredients:
          - color: var(--gray800)
          - justify-self: start
          - align-self: start
          - text-align: left
          - padding-left: 10px
          - margin-top: 0px
          - white-space: normal
          - word-wrap: break-word
          - overflow: hidden
          - max-width: 100%
        details:
          - color: var(--gray800)
          - justify-self: start
          - align-self: start
          - text-align: left
          - padding-left: 10px
          - margin-top: 0px
          - white-space: normal
          - word-wrap: break-word
          - overflow: hidden
          - max-width: 100%
  my_menu_card:
    variables:
      toggle: input_boolean.lundi_toggle
    entity: null
    show_icon: false
    show_name: true
    show_state: true
    name: |
      [[[ 
        return String(entity.attributes.recette_nom)
          .replace(/&#39/g, "'")
          .replace(/(\d+-)/g, '<br>$1'); 
      ]]]
    styles:
      grid:
        - grid-template-areas: '"s n "'
        - grid-template-columns: max-content 1fr min-content
        - row-gap: 2px
      card:
        - padding: 15px
      state:
        - width: 150px
        - justify-self: start
        - text-align: left
        - height: 100%
        - font-size: 1.5em
        - text-transform: uppercase
        - padding-right: 15px
        - border-right: 1px solid var(--pop)
      name:
        - justify-self: start
        - align-self: center
        - text-align: left
        - font-size: 1.4em
        - padding-left: 10px
        - margin-bottom: 2px
  my_camera_card:
    show_state: false
    show_label: true
    label: Live
    icon: mdi:record
    show_icon: true
    styles:
      grid:
        - grid-template-areas: |
            'n i l'
            's i l'
            'camera camera camera'
        - grid-template-rows: min-content min-content min-content
        - row-gap: 3px
      card:
        - padding: 20px
      state:
        - justify-self: start
        - padding-bottom: 20px
        - font-size: 12px
        - font-weight: 500px
        - color: var(--color-dark-gray)
      label:
        - font-weight: 500
      icon:
        - width: 15px
        - color: var(--color-red)
      name:
        - padding-left: 10px
        - justify-self: start
        - font-size: 1.5em
        - font-weight: 400
        - font-family: Quicksand
        - letter-spacing: 0.3em
    custom_fields:
      camera:
        card:
          type: custom:frigate-card
          cameras:
            - camera_entity: '[[[ return entity.entity_id ]]]'
          live:
            preload: true
          menu:
            style: none
          performance:
            style:
              border_radius: true
              box_shadow: false
            features:
              card_loading_indicator: false
              animated_progress_indicator: false
          image: {}
          view:
            default: live
            theme:
              themes: []
            dim: false
          status_bar:
            style: none
          media_viewer:
            controls:
              builtin: false
          dimensions:
            aspect_ratio_mode: static
            aspect_ratio: '16:9'
  my_light_card:
    variables:
      name: murphy
      icon: mdi:wardrobe
      entity: light.degagement_lampemurphy
      background: var(--active-pop)
    icon: '[[[ return variables.icon ]]]'
    entity: '[[[ return variables.entity ]]]'
    name: '[[[ return variables.name ]]]'
    tap_action:
      action: toggle
    state:
      - value: 'off'
        styles:
          card:
            - background: var(--gray000)
          img_cell:
            - background: transparent
          icon:
            - color: var(--gray800)
            - opacity: 0.8
          name:
            - color: var(--gray800)
          custom_fields:
            state:
              - color: var(--gray800)
    styles:
      card:
        - padding: 4px 4px 20px 20px
        - height: 114px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i i" "state icon" "n ."'
        - grid-template-columns: 1fr min-content
        - grid-template-rows: min-content 1fr min-content
      img_cell:
        - justify-self: end
        - align-self: start
        - background: transparent
        - padding: 14px
        - border-radius: 50%
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      name:
        - font-weight: 600
        - justify-self: start
        - letter-spacing: 0.3em
        - font-size: 14px
        - color: var(--gray800)
        - margin-top: '-15px'
        - opacity: '0.7'
      custom_fields:
        icon:
          - justify-self: end
          - padding-bottom: 5px
        state:
          - justify-self: start
          - font-size: 40px
          - font-weight: 300
          - color: var(--gray800)
          - margin-right: 16px
          - margin-top: '-35px'
    custom_fields:
      icon: |
        [[[
         var state = entity.state;
         if(state == "on")
          return `<ha-icon
          icon="mdi:toggle-switch"
          style="color: var(--gray800); width:60px; height:60px;">
          </ha-icon>
          `;
         else 
          return `<ha-icon
          icon="mdi:toggle-switch-off"
          style="color: var(--gray400); width:60px; height:60px;">
          </ha-icon>
          `;
        ]]]
      state: |
        [[[
          var state = entity.state
         if(state == "on")
          return `<span>On</san>
          `;
         else 
          return `<span>Off</san>
          `;
        ]]] 
  hc_graph_card:
    variables:
      color: var(--color-red)
      temp: null
      hum: null
    show_state: true
    styles:
      grid:
        - grid-template-areas: |
            'n i'
            's i'
            'graph graph'
        - grid-template-rows: min-content min-content
      card:
        - padding-bottom: 0px
      name:
        - justify-self: start
        - margin-left: 10px
        - font-family: Quicksand
        - font-weight: 700
        - font-size: 1rem
      state:
        - justify-self: start
        - margin-left: 10px
        - font-family: Quicksand
        - font-weight: 500
        - font-size: 0.8rem
        - opacity: 0.8
      icon:
        - width: 50%
        - color: white
      img_cell:
        - justify-self: end
        - align-self: start
        - width: 25px
        - height: 25px
        - padding: 5px
        - margin-right: 10px
        - background: '[[[ return variables.color ]]]'
        - border-radius: 50%
    custom_fields:
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return entity.entity_id ]]]'
              show_fill: true
              show_line: false
          show:
            name: false
            icon: false
            state: false
          line_width: 2
          line_color: '[[[ return variables.color ]]]'
  hc_security_card:
    show_state: false
    show_icon: true
    show_name: true
    show_last_changed: false
    show_label: true
    variables:
      color_disarmed: var(--active-pop)
      color_vacation: var(--active-pop)
      color_night: var(--active-pop)
      color_away: var(--active-pop)
      security_code: ''
    styles:
      grid:
        - grid-template-areas: |
            "n action_card"
            "l action_card"
        - grid-template-rows: min-content 1fr
      card:
        - overflow: hidden
        - padding: 20px
        - pointer-events: none
      label:
        - justify-self: start
        - align-self: start
        - font-family: Quicksand
        - font-size: 12px
        - font-weight: 500
        - color: var(--gray800)
      img_cell:
        - position: absolute
        - top: 40%
        - right: 50%
        - overflow: visible
        - background-color: var(--gray200)
        - position: absolute
        - width: 300px
        - height: 300px
        - border-radius: 50%
      icon:
        - position: absolute
        - width: 15rem
        - color: var(--pop)
        - opacity: 0.8
      name:
        - justify-self: start
        - font-size: 1.5em
        - font-weight: 400
        - font-family: Quicksand
        - letter-spacing: 0.3em
    state:
      - value: disarmed
        name: désarmée
        icon: mdi:shield-off
        styles:
          icon:
            - color: var(--gray400)
      - value: armed_away
        name: mode absent
        icon: mdi:shield-lock
        color: '[[[ return variables.color_away ]]]'
      - value: armed_night
        name: mode nuit
        icon: mdi:shield-moon
        color: '[[[ return variables.color_night ]]]'
      - value: armed_vacation
        name: mode vacances
        icon: mdi:shield-airplane
        color: '[[[ return variables.vacation ]]]'
      - value: arming
        name: Arming...
        icon: mdi:shield
        styles:
          icon:
            - animation: flash 5s linear infinite
            - color: var(--active-orange)
      - value: triggered
        name: Triggered!
        icon: mdi:shield-alert
        styles:
          icon:
            - animation: flash 2s infinite
            - color: white
          card:
            - background: var(--active-red)
          name:
            - color: white
          label:
            - color: white
    extra_styles: |
      @keyframes flash {
        0% {opacity: 0.800%;}
        50% {opacity: 0%;}
        100% {opacity: 0.800%;}
      }
    custom_fields:
      action_card:
        card:
          type: custom:button-card
          styles:
            grid:
              - grid-template-areas: '"item1" "item2" "item3" "item4"'
              - row-gap: 10px
            card:
              - padding: 10px
              - border-radius: 50px
              - background-color: var(--gray200)
          custom_fields:
            item1:
              card:
                type: custom:button-card
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                show_state: false
                icon: mdi:shield-lock
                styles:
                  icon:
                    - width: 25px
                    - color: var(--text)
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                state:
                  - value: armed_away
                    styles:
                      card:
                        - background: '[[[ return variables.color_away ]]]'
                        - box-shadow: none
                      icon:
                        - color: var(gray-800)
                  - value: arming
                    styles:
                      icon:
                        - color: var(gray-800)
                        - animation: flash 5s linear infinite
                      card:
                        - background: var(--active-orange)
                        - box-shadow: none
                extra_styles: |
                  @keyframes flash {
                    0% {opacity: 0.800%;}
                    50% {opacity: 0%;}
                    100% {opacity: 0.800%;}
                  }
                tap_action:
                  action: call-service
                  service: alarm_control_panel.alarm_arm_away
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            item2:
              card:
                type: custom:button-card
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                show_state: false
                icon: mdi:shield-moon
                styles:
                  icon:
                    - width: 25px
                    - color: var(--text)
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                state:
                  - value: armed_night
                    styles:
                      card:
                        - background: '[[[ return variables.color_night ]]]'
                        - box-shadow: none
                      icon:
                        - color: var(gray-800)
                  - value: arming
                    styles:
                      icon:
                        - color: var(gray-800)
                        - animation: flash 5s linear infinite
                      card:
                        - background: var(--active-orange)
                        - box-shadow: none
                extra_styles: |
                  @keyframes flash {
                    0% {opacity: 0.800%;}
                    50% {opacity: 0%;}
                    100% {opacity: 0.800%;}
                  }
                tap_action:
                  action: call-service
                  service: alarm_control_panel.alarm_arm_night
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            item3:
              card:
                type: custom:button-card
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                show_state: false
                icon: mdi:shield-airplane
                styles:
                  icon:
                    - width: 25px
                    - color: var(--text)
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                state:
                  - value: armed_vacation
                    styles:
                      card:
                        - background: '[[[ return variables.color_vacation ]]]'
                        - box-shadow: none
                      icon:
                        - color: var(gray-800)
                  - value: arming
                    styles:
                      icon:
                        - color: var(gray-800)
                        - animation: flash 5s linear infinite
                      card:
                        - background: var(--active-orange)
                        - box-shadow: none
                extra_styles: |
                  @keyframes flash {
                    0% {opacity: 0.800%;}
                    50% {opacity: 0%;}
                    100% {opacity: 0.800%;}
                  }
                tap_action:
                  action: call-service
                  service: alarm_control_panel.alarm_arm_vacation
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            item4:
              card:
                type: custom:button-card
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                show_state: false
                icon: mdi:shield-off
                state:
                  - value: disarmed
                    styles:
                      card:
                        - background: '[[[ return variables.color_disarmed ]]]'
                        - box-shadow: none
                      icon:
                        - color: var(gray-800)
                styles:
                  icon:
                    - width: 25px
                    - color: var(--text)
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                tap_action:
                  action: call-service
                  service: alarm_control_panel.alarm_disarm
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
  hc_title_card:
    show_label: true
    variables:
      entity1: null
      entity2: null
      entity3: null
      entity1_name: null
      entity2_name: null
      entity3_name: null
    styles:
      grid:
        - grid-template-areas: |
            "n btn1 btn2 btn3"
            "l btn1 btn2 btn3"
      name:
        - justify-self: start
        - align-self: start
        - font-weight: 500
        - font-family: Quicksand
        - font-size: 1.8rem
      label:
        - justify-self: start
        - font-family: Quicksand
        - opacity: 0.8
        - font-size: 1rem
        - font-weight: 200
      card:
        - padding: 15px 15px 15px 15px
        - background: none
        - animation: slide-in 1s ease-out, opacity 1s ease-in
        - box-shadow: none
    custom_fields:
      btn1:
        card:
          type: custom:button-card
          entity: '[[[ return variables.entity1 ]]]'
          name: '[[[ return variables.entity1_name ]]]'
          show_icon: false
          styles:
            grid:
              - grid-template-areas: '''n i'''
              - grid-template-columns: min-content
            card:
              - padding: 8px
              - background: none
              - border-radius: 0
              - box-shadow: none
            name:
              - font-family: Quicksand
              - font-weight: 600
              - font-size: 12px
              - opacity: 0.8
          state:
            - value: 'on'
              styles:
                card:
                  - background: var(--color-gold)
                  - border-radius: 5px
                name:
                  - color: var(--color-white)
      btn2:
        card:
          type: custom:button-card
          entity: '[[[ return variables.entity2 ]]]'
          name: '[[[ return variables.entity2_name ]]]'
          show_icon: false
          styles:
            grid:
              - grid-template-areas: '''n i'''
              - grid-template-columns: min-content
            card:
              - padding: 8px
              - background: none
              - border-radius: 0
              - box-shadow: none
            name:
              - font-family: Quicksand
              - font-weight: 600
              - font-size: 12px
              - opacity: 0.8
          state:
            - value: 'on'
              styles:
                card:
                  - background: var(--color-gold)
                  - border-radius: 5px
                name:
                  - color: var(--color-white)
      btn3:
        card:
          type: custom:button-card
          entity: '[[[ return variables.entity3 ]]]'
          name: '[[[ return variables.entity3_name ]]]'
          show_icon: false
          styles:
            grid:
              - grid-template-areas: '''n i'''
              - grid-template-columns: min-content
            card:
              - padding: 8px
              - background: none
              - border-radius: 0
              - box-shadow: none
            name:
              - font-family: Quicksand
              - font-weight: 600
              - font-size: 12px
              - opacity: 0.8
          state:
            - value: 'on'
              styles:
                card:
                  - background: var(--color-gold)
                  - border-radius: 5px
                name:
                  - color: var(--color-white)
    extra_styles: |
      @keyframes slide-in {
        0% {transform: translateX(-2%);}
        100% {transform: translateX(0%);}
      }
      @keyframes opacity {
        0% {opacity:0;}
        100% {opacity:1;}
      }
  hc_title_card_backbtn:
    icon: mdi:arrow-left-bold
    styles:
      card:
        - background: none
        - margin-bottom: 20px
        - padding: 0
        - box-shadow: none
        - overflow: visible
        - '--mdc-ripple-color': transparent
      icon:
        - width: 50%
      img_cell:
        - width: 40px
        - height: 40px
        - background: var(--ha-card-background)
        - border-radius: 50%
        - box-shadow: var(--ha-card-box-shadow)
        - overflow: visible
      grid:
        - grid-template-areas: '''i n'''
        - grid-template-columns: min-content 1fr
      name:
        - justify-self: center
        - font-weight: 700
        - font-family: Quicksand
        - font-size: 1.5rem
        - margin-left: '-2.5rem'
        - color: var(--title-text)
    tap_action:
      action: navigate
      navigation_path: /main
  hc_select_card:
    show_state: false
    show_icon: false
    show_name: true
    show_last_changed: false
    show_label: false
    variables:
      color: var(--active-purple)
    styles:
      grid:
        - grid-template-areas: |
            "n i"
            "s i"
            "action_card action_card"
        - grid-template-rows: min-content 1fr
      card:
        - overflow: hidden
        - padding: 10px
        - pointer-events: none
        - background: var(--gray000)
      label:
        - justify-self: start
        - align-self: start
        - font-family: Quicksand
        - font-size: 12px
        - font-weight: 500
        - color: var(--gray800)
      img_cell:
        - justify-self: end
        - align-self: center
        - border-radius: 500px
        - background: transparent
      icon:
        - width: 30px
        - padding-top: 0px
        - padding-right: 20px
        - color: var(--gray400)
        - opacity: 0.8
      name:
        - padding-left: 10px
        - justify-self: start
        - font-size: 1.5em
        - font-weight: 400
        - font-family: Quicksand
        - letter-spacing: 0.3em
    state:
      - value: 'off'
        name: Ballon OFF
        icon: mdi:power
      - value: électrique
        name: Ballon électrique
        icon: mdi:lightning-bolt
      - value: chaudière
        name: Ballon chaudière
        icon: mdi:water-boiler
      - value: marche forcée
        name: Ballon marche forcée
        icon: mdi:fire
    custom_fields:
      action_card:
        card:
          type: custom:button-card
          styles:
            grid:
              - grid-template-areas: '"item1 item2 item3 item4"'
              - grid-template-columns: repeat(4, 1fr)
              - row-gap: 10px
            card:
              - margin-top: 10px
              - padding: 5px
              - border-radius: 50px
              - background-color: var(--gray200)
          custom_fields:
            item1:
              card:
                type: custom:button-card
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                show_state: false
                icon: mdi:power
                styles:
                  icon:
                    - width: 25px
                    - color: var(--gray800)
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                state:
                  - value: 'off'
                    styles:
                      card:
                        - background: var(--active-purple)
                      icon:
                        - color: var(--gray800)
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
                  data:
                    option: 'off'
            item2:
              card:
                type: custom:button-card
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                show_state: false
                icon: mdi:lightning-bolt
                styles:
                  icon:
                    - width: 25px
                    - color: var(--gray800)
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                state:
                  - value: électrique
                    styles:
                      card:
                        - background: var(--active-green)
                      icon:
                        - color: var(--gray800)
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
                  data:
                    option: électrique
            item3:
              card:
                type: custom:button-card
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                show_state: false
                icon: mdi:water-boiler
                styles:
                  icon:
                    - width: 25px
                    - color: var(--gray800)
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                state:
                  - value: chaudière
                    styles:
                      card:
                        - background: var(--active-orange)
                      icon:
                        - color: var(--gray800)
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
                  data:
                    option: chaudière
            item4:
              card:
                type: custom:button-card
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                show_state: false
                icon: mdi:fire
                styles:
                  icon:
                    - width: 25px
                    - color: var(--gray800)
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                state:
                  - value: marche forcée
                    styles:
                      card:
                        - background: var(--active-red)
                      icon:
                        - color: var(--gray800)
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
                  data:
                    option: marche forcée
  hc_blind_card:
    triggers_update:
      - input_select.mode_volets
      - cover.voletsmaison
      - cover.voletsrdc
      - cover.voletsetage
      - '[[[ return entity.entity_id ]]]'
    variables:
      enable_slider: true
      color: var(--gray800)
    show_label: true
    show_state: true
    label: |
      [[[
        return states[entity.entity_id].attributes.current_position + '<sup style="font-size: 20px;">%</sup>';
      ]]]
    show_icon: false
    icon: mdi:blinds
    styles:
      grid:
        - grid-template-areas: |
            [[[
              if (variables.enable_slider) {
                  return '"l slider buttons" "n slider buttons" "s slider buttons"';
              }
                return '"l . buttons" "n . buttons" "s . buttons"';
            ]]]
        - grid-template-columns: 1fr auto auto
        - grid-template-rows: min-content auto min-content min-content
        - column-gap: 10px
      card:
        - padding: 20px
        - border-radius: 20px
        - transition: background 0.5s ease-in-out;
        - background: var(--gray800)
      name:
        - letter-spacing: 0.3em
        - font-size: 1.5em
        - justify-self: start
        - align-self: end
        - font-family: Quicksand
        - font-weight: 500
        - z-index: 2
        - color: var(--gray800)
      label:
        - color: var(--gray800)
        - font-size: 5em
        - justify-self: start
        - align-self: start
        - font-weight: 400
        - font-family: Quicksand
        - z-index: 2
      state:
        - color: var(--gray800)
        - justify-self: start
        - opacity: 0.8
        - font-size: 12px
        - font-family: Quicksand
        - z-index: 2
      img_cell:
        - position: absolute
        - top: 40%
        - right: 40%
        - overflow: visible
      icon:
        - position: absolute
        - width: 15rem
        - color: red
      custom_fields:
        buttons:
          - box-shadow: none
        slider:
          - box-shadow: none
          - display: |
              [[[
                if (states['input_boolean.cover_slider'].state == 'on') {
                    return "block";
                }
                return "none";
              ]]]   
          - z-index: 5
    custom_fields:
      buttons:
        card:
          type: custom:button-card
          styles:
            grid:
              - grid-template-areas: |
                  "up"
                  "middle"
                  "down"
              - row-gap: 0.3rem
            card:
              - padding: 10px
              - box-shadow: none
              - border-radius: 50px
              - background-color: var(--gray200)
              - z-index: 3
          custom_fields:
            up:
              card:
                type: custom:button-card
                icon: mdi:chevron-up
                styles:
                  icon:
                    - width: 25px
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                tap_action:
                  action: call-service
                  service: cover.open_cover
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            middle:
              card:
                type: custom:button-card
                icon: mdi:menu
                styles:
                  icon:
                    - color: var(--pop)
                    - width: 25px
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                tap_action:
                  action: call-service
                  service: input_boolean.toggle
                  initial: 'off'
                  target:
                    entity_id: input_boolean.cover_slider
            down:
              card:
                type: custom:button-card
                icon: mdi:chevron-down
                styles:
                  icon:
                    - width: 25px
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                tap_action:
                  action: call-service
                  service: cover.close_cover
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
      slider:
        card:
          type: conditional
          conditions:
            - condition: state
              entity: input_boolean.cover_slider
              state: 'on'
          card:
            type: custom:my-slider-v2
            entity: '[[[ return entity.entity_id ]]]'
            mode: position
            showMin: true
            aligh-self: start
            z-index: 4
            styles:
              card:
                - height: 160px
                - width: 50px
                - box-shadow: none
                - border-radius: 12px
                - background-color: var(--lime)
                - background: |
                    [[[
                      if (states[entity.entity_id].state === 'off') {
                        return 'var(--lime)';
                      } else {
                        return 'var(--gray000)';
                      }
                    ]]]
                - border-radius: 12px
              progress:
                - height: 100%
                - background: |
                    [[[
                      if (states[entity.entity_id].state === 'off') {
                        return 'white';
                      } else {
                        return 'var(--active-pop)';
                      }
                    ]]]
                - border-radius: 12px
              track:
                - background: |
                    [[[
                      if (states[entity.entity_id].state === 'on') {
                        return 'var(--opacity-contrast-100)';
                      } else {
                        return 'var(--gray200)';
                      }
                    ]]]
                - border-radius: 12px
              thumb:
                - height: 5px
                - width: 30px
                - background: |
                    [[[
                      if (states[entity.entity_id].state === 'off') {
                        return 'black';
                      } else {
                        return 'white';
                      }
                    ]]]
                - position: absolute
                - bottom: 15px
                - left: 10px
                - border-radius: 50px
  hc_climate_card:
    variables:
      show_window_state: false
      window_open_boolean: null
      show_mode_state: true
      show_graph: false
      graph_entity: null
      graph_color: var(--color-red)
    show_label: true
    show_state: true
    state_display: |
      [[[
        var state = "Currently " + states[entity.entity_id].attributes.current_temperature +'<p style="font-size:10px;display:inline;vertical-align:text-top">°</p>'
        
        if (variables.show_mode_state == true & states[entity.entity_id].state === "heat") {
          state = state + ' - ' + "<ha-icon icon='mdi:fire' style='color: red; width: 14px; height: 14px'></ha-icon>"             
        } else if (variables.show_mode_state == true & states[entity.entity_id].state === "off") {
           state = state + ' - ' + "<ha-icon icon='mdi:power-off' style='width: 14px; height: 14px'></ha-icon>"
        }
        if (variables.show_window_state == true & variables.window_open_boolean == true) {
          state = state + ' - ' + "<ha-icon icon='mdi:window-open-variant' style='width: 14px; height: 14px'></ha-icon>"             
        } else if (variables.show_window_state == true & variables.window_open_boolean == false){
           state = state + ' - ' + "<ha-icon icon='mdi:window-closed-variant' style='width: 14px; height: 14px'></ha-icon>"
        }
        return state     
      ]]]
    label: |
      [[[
        return states[entity.entity_id].attributes.temperature + '<sup style="font-size: 40px;">°</sup>'
      ]]]
    show_icon: false
    styles:
      grid:
        - grid-template-areas: |
            'l buttons'
            'n buttons'
            's buttons'
            'graph graph'
        - grid-template-rows: min-content min-content min-content min-content
      card:
        - padding: 20px
        - pointer-events: none
      name:
        - justify-self: start
        - align-self: end
        - font-weight: 500
        - z-index: 2
      label:
        - font-size: 5em
        - justify-self: start
        - align-self: start
        - font-weight: 700
        - z-index: 2
      state:
        - justify-self: start
        - opacity: 0.8
        - font-size: 12px
        - z-index: 2
      custom_fields:
        graph:
          - display: |
              [[[
                if (variables.show_graph) {
                  return 'block';
                }
                else {
                  return 'none';
                }


              ]]]
          - position: absolute
          - left: 0
          - bottom: 0
          - width: 100%
          - z-index: 1
    tap_action: none
    custom_fields:
      buttons:
        card:
          type: custom:button-card
          styles:
            grid:
              - grid-template-areas: |
                  'item_1'
                  'item_2'
              - row-gap: 3rem
            card:
              - padding: 10px
              - border-radius: 50px
              - background-color: var(--contrast-10)
              - z-index: 2
          custom_fields:
            item_1:
              card:
                type: custom:button-card
                icon: mdi:chevron-up
                styles:
                  icon:
                    - width: 25px
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                tap_action:
                  action: call-service
                  service: climate.set_temperature
                  data:
                    temperature: |
                      [[[
                        return states[entity.entity_id].attributes.temperature + 0.5;
                      ]]]
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
                hold_action:
                  action: call-service
                  service: climate.turn_on
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            item_2:
              card:
                type: custom:button-card
                icon: mdi:chevron-down
                styles:
                  icon:
                    - width: 25px
                  card:
                    - padding: 10px
                    - border-radius: 500px
                    - box-shadow: none
                    - pointer-events: auto
                    - background: none
                tap_action:
                  action: call-service
                  service: climate.set_temperature
                  data:
                    temperature: |
                      [[[
                        return states[entity.entity_id].attributes.temperature - 0.5;
                      ]]]
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
                hold_action:
                  action: call-service
                  service: climate.turn_off
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return variables.graph_entity ]]]'
              show_fill: true
              show_line: false
          show:
            name: false
            icon: false
            state: false
          line_width: 2
          line_color: '[[[ return variables.graph_color ]]]'
  room_conditions:
    variables:
      background: var(--popupBG)
      entity: null
      temp: >
        [[[ return
        Math.round((states['sensor.temperatur_stue_temperature'].state) * 10)/10
        + '°' + '<span style="font-size:0.3em">' +
        Math.round((states['sensor.temperatur_stue_humidity'].state) * 10)/10 +
        '%']]]
    show_icon: false
    show_name: false
    show_label: true
    custom_fields:
      temp: '[[[ return variables.temp ]]]'
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
              color: var(--pink)
          line_width: 1
          height: 100
          show:
            icon: false
            name: false
            state: false
            legend: false
            labels: false
    styles:
      grid:
        - grid-template-areas: '"temp"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content
      card:
        - padding: 24px
        - background: '[[[ return variables.background ]]]'
      custom_fields:
        temp:
          - justify-self: start
          - text-align: left
          - font-size: 66px
          - color: var(--gray800)
          - line-height: 66px
          - font-weight: 300
          - padding: 12px 0 0 0
        graph:
          - position: absolute
          - width: 100%
          - left: 0
          - bottom: 0
  sensor_big_percentage:
    variables:
      entity: var_entity
      name: var_name
      icon: var_icon
      background: var(--gray000)
      label: var_label
      bar: var_bar
    entity: '[[[ return variables.entity ]]]'
    name: '[[[ return variables.name ]]]'
    label: '[[[ return variables.label ]]]'
    show_icon: true
    show_label: true
    icon: '[[[ return variables.icon ]]]'
    styles:
      card:
        - padding: 0
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i" "l" "n" "bar"'
      label:
        - justify-self: start
        - font-size: 40px
        - font-weight: 300
        - padding-left: 20px
        - color: var(--gray800)
      name:
        - justify-self: start
        - align-self: start
        - font-size: 14px
        - color: var(--gray800)
        - padding-left: 20px
        - opacity: '0.7'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: transparent
        - padding: 14px
        - border-radius: 50%
        - margin: 4px 4px 0 0
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      custom_fields:
        bar:
          - justify-self: start
          - width: 100%
          - background: rgba(var(--highlight))
          - height: 30px
          - margin-top: 6px
    custom_fields:
      bar: '[[[ return variables.bar ]]]'
  sensor_big_graph:
    variables:
      name: null
      icon: null
      label: null
      background: var(--gray000)
      text: var(--gray800)
      graph: null
    name: '[[[ return variables.name ]]]'
    label: '[[[ return variables.label ]]]'
    show_label: true
    show_icon: true
    icon: '[[[ return variables.icon ]]]'
    styles:
      card:
        - padding: 4px 4px 20px 20px
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i" "l" "n"'
      label:
        - justify-self: start
        - font-size: 40px
        - font-weight: 300
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: '0.7'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: transparent
        - padding: 14px
        - border-radius: 50%
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      custom_fields:
        graph:
          - position: absolute
          - width: 100%
          - left: 0
          - bottom: 0
    custom_fields:
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return variables.graph ]]]'
              color: var(--red)
          line_width: 0
          height: 200
          show:
            icon: false
            name: false
            state: false
            legend: false
            labels: false
  button_trigger:
    variables:
      name: null
      icon: null
      entity: null
      background: var(--red)
      text: var(--black)
    icon: '[[[ return variables.icon ]]]'
    entity: '[[[ return variables.entity ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      grid:
        - grid-template-areas: '"i" "n"'
      img_cell:
        - justify-self: start
        - align-self: start
        - width: 24px
        - height: 24px
      icon:
        - width: 24px
        - height: 24px
        - color: '[[[ return variables.text ]]]'
      name:
        - justify-self: start
        - text-align: left
        - font-size: 16px
        - font-weight: 500
        - color: '[[[ return variables.text ]]]'
      card:
        - padding: 20px
        - background: '[[[ return variables.background ]]]'
        - height: 130px
  sensor_big:
    variables:
      name: var_name
      label: var_label
      icon: var_icon
      background: var(--gray000)
    icon: '[[[ return variables.icon ]]]'
    label: >
      [[[  return '<marquee behavior="alternate" scrollamount="2">' +
      variables.label + '<\marquee>' ]]]
    name: '[[[ return variables.name ]]]'
    show_label: true
    styles:
      card:
        - padding: 20px
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i" "l" "n"'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: transparent
        - padding: 14px
        - border-radius: 50%
        - margin: '-16px -16px 0 0'
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      label:
        - justify-self: start
        - font-size: 2em
        - font-weight: 300
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: '0.7'
  sensor_big_door:
    variables:
      name: var_name
      label: var_label
      icon: var_icon
      background: var(--popupBG)
    icon: '[[[ return variables.icon ]]]'
    label: >
      [[[  return '<marquee behavior="alternate" scrollamount="2">' +
      variables.label + '<\marquee>' ]]]
    name: '[[[ return variables.name ]]]'
    show_label: true
    styles:
      card:
        - padding: 20px
        - height: 90px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i" "n" "l"'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
        - margin: '-16px -12px 0 0'
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 0.75em
        - font-weight: 300
        - color: var(--gray800)
        - opacity: '0.7'
        - margin: '-10px 0 0 0'
      label:
        - justify-self: start
        - font-size: 1.5em
        - color: var(--gray800)
        - margin: '-10px 0 0 0'
  sensor_big_2columns:
    variables:
      name: var_name
      label: var_label
      icon: var_icon
      background: var(--popupBG)
      state: var_state
    icon: '[[[ return variables.icon ]]]'
    label: >
      [[[  return '<marquee behavior="alternate" scrollamount="2">' +
      variables.label + '<\marquee>' ]]]
    name: '[[[ return variables.name ]]]'
    show_label: true
    custom_fields:
      state: '[[[ return variables.state ]]]'
    styles:
      card:
        - padding: 20px
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i i" "l state" "n n"'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
        - margin: '-16px -16px 0 0'
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      label:
        - justify-self: start
        - font-size: 2em
        - font-weight: 300
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: '0.7'
      custom_fields:
        state:
          - font-size: 14px
          - color: var(--gray800)
          - opacity: '0.7'
          - margin-bottom: '-5px'
  button_toggle:
    variables:
      name: null
      icon: null
      entity: null
      background: var(--popupBG)
    icon: '[[[ return variables.icon ]]]'
    entity: '[[[ return variables.entity ]]]'
    name: '[[[ return variables.name ]]]'
    tap_action:
      action: toggle
    state:
      - value: 'off'
        styles:
          card:
            - background: var(--gray800)
          img_cell:
            - background: rgba(var(--highlight_active))
          icon:
            - color: var(--gray000)
          name:
            - color: var(--gray000)
          custom_fields:
            state:
              - color: var(--gray000)
    styles:
      card:
        - padding: 4px 4px 20px 20px
        - height: 180px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i i" "state icon" "n icon"'
        - grid-template-columns: 1fr min-content
        - grid-template-rows: 1fr min-content min-content
      img_cell:
        - justify-self: end
        - align-self: start
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
        - width: 30px
        - height: 30px
      icon:
        - width: 30px
        - height: 30px
        - color: var(--gray800)
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: '0.7'
      custom_fields:
        icon:
          - justify-self: end
        state:
          - justify-self: start
          - font-size: 40px
          - font-weight: 300
          - color: var(--gray800)
          - margin-right: 16px
    custom_fields:
      icon: |
        [[[
         var state = entity.state;
         if(state == "on")
          return `<ha-icon
          icon="mdi:toggle-switch"
          style="color: var(--pop); width:60px; height:60px;">
          </ha-icon>
          `;
         else 
          return `<ha-icon
          icon="mdi:toggle-switch-off"
          style="color: var(--gray000); width:60px; height:60px;">
          </ha-icon>
          `;
        ]]]
      state: |
        [[[
          var state = entity.state
         if(state == "on")
          return `<span>On</san>
          `;
         else 
          return `<span>Off</san>
          `;
        ]]] 
  button_toggle_small:
    variables:
      name: null
      icon: null
      entity: null
      background: var(--popupBG)
    icon: '[[[ return variables.icon ]]]'
    entity: '[[[ return variables.entity ]]]'
    name: |
      [[[ return variables.name ]]]
    tap_action:
      action: toggle
    state:
      - value: 'off'
        styles:
          card:
            - background: var(--gray800)
          icon:
            - color: var(--gray000)
          img_cell:
            - background: rgba(var(--highlight_active))
          name:
            - color: var(--gray000)
          custom_fields:
            state:
              - color: var(--gray000)
    styles:
      card:
        - height: 66px
        - border-radius: 75px
        - padding: 4px 20px 4px 4px
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-columns: 76px 1fr min-content
        - grid-template-areas: '"i state icon" "i n icon"'
      icon:
        - width: 30px
        - color: var(--gray800)
      img_cell:
        - justify-self: start
        - width: 30px
        - height: 30px
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: 0.7
        - padding-bottom: 7px
      custom_fields:
        icon: null
        state:
          - justify-self: start
          - font-size: 16px
          - padding-top: 4px
          - font-weight: 500
          - color: var(--gray800)
    custom_fields:
      icon: |
        [[[
         var state = entity.state;
         if(state == "on")
          return `<ha-icon
          icon="mdi:toggle-switch"
          style="color: var(--green); width:50px; height:40px;">
          </ha-icon>
          `;
         else 
          return `<ha-icon
          icon="mdi:toggle-switch-off"
          style="color: var(--gray000); width:50px; height:40px;">
          </ha-icon>
          `;
        ]]]
      state: |
        [[[
          var state = entity.state
         if(state == "on")
          return `<span>På</san>
          `;
         else 
          return `<span>Av</san>
          `;
        ]]] 
  chips_big_active:
    triggers_update: all
    variables:
      name: null
      entity: null
      icon: null
    entity: '[[[ return variables.entity ]]]'
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      card:
        - margin-left: 10px
        - margin-top: 12px
        - padding: 4px
        - background: var(--active-pop)
        - width: auto
      grid:
        - grid-template-areas: |
            "i n"     
        - grid-template-columns: min-content 1fr
      img_cell:
        - width: 22px
        - height: 22px
        - padding: 9px
        - background: var(--gray000)
        - border-radius: 100%
      icon:
        - width: 22px
        - height: 22px
        - color: var(--gray800)
      name:
        - justify-self: start
        - padding: 0 10px
        - font-size: 14px
        - color: var(--gray800)
        - font-weight: 600
  chips_big:
    triggers_update: all
    variables:
      name: null
      entity: null
      icon: null
    entity: '[[[ return variables.entity ]]]'
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      card:
        - margin-left: 10px
        - margin-top: 12px
        - padding: 4px
        - background: var(--gray200)
        - width: auto
      grid:
        - grid-template-areas: |
            "i n"        
        - grid-template-columns: min-content 1fr
      img_cell:
        - justify-self: start
        - width: 22px
        - height: 22px
        - padding: 9px
        - background: var(--gray000)
        - border-radius: 100%
      icon:
        - width: 22px
        - height: 22px
        - color: var(--gray800)
      name:
        - justify-self: start
        - padding: 0 10px
        - font-size: 14px
        - color: var(--gray800)
        - font-weight: 600
  chips_medium_active:
    variables:
      name: null
      icon: null
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      card:
        - padding: 10px 16px 10px 12px
        - background: var(--active-small)
      grid:
        - grid-template-areas: '"i n"'
        - grid-template-columns: min-content 1fr
      img_cell:
        - justify-self: start
        - align-self: center
        - width: 20px
        - height: 20px
        - background: none
      icon:
        - width: 20px
        - height: 20px
        - margin-top: '-1px'
        - color: var(--black)
      name:
        - justify-self: start
        - font-size: 14px
        - padding-left: 4px
        - color: var(--black)
  chips_medium:
    variables:
      name: null
      icon: null
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    styles:
      card:
        - padding: 10px 16px 10px 12px
        - background: var(--gray800)
      grid:
        - grid-template-areas: '"i n"'
        - grid-template-columns: min-content 1fr
      img_cell:
        - justify-self: start
        - align-self: center
        - width: 20px
        - height: 20px
        - background: none
      icon:
        - width: 20px
        - height: 20px
        - margin-top: '-1px'
        - color: var(--gray000)
      name:
        - justify-self: start
        - font-size: 14px
        - padding-left: 4px
        - color: var(--gray000)
  chips_small:
    variables:
      icon: null
    icon: '[[[ return variables.icon ]]]'
    show_name: false
    styles:
      card:
        - padding: 13px
        - border-radius: 50%
        - background: var(--gray800)
      img_cell:
        - width: 22px
        - height: 22px
      icon:
        - width: 22px
        - height: 22px
        - color: var(--gray000)
  chips_small_white:
    variables:
      icon: null
    icon: '[[[ return variables.icon ]]]'
    show_name: false
    styles:
      card:
        - padding: 13px
        - border-radius: 50%
        - background: var(--gray400)
      img_cell:
        - width: 22px
        - height: 22px
      icon:
        - width: 22px
        - height: 22px
        - color: var(--gray000)
  chips_small_blue:
    variables:
      icon: null
    icon: '[[[ return variables.icon ]]]'
    show_name: false
    styles:
      card:
        - padding: 13px
        - border-radius: 50%
        - background: var(--blue)
      img_cell:
        - width: 22px
        - height: 22px
      icon:
        - width: 22px
        - height: 22px
        - color: var(--gray000)
  chips_small_red:
    variables:
      icon: null
    icon: '[[[ return variables.icon ]]]'
    show_name: false
    styles:
      card:
        - padding: 13px
        - border-radius: 50%
        - background: var(--red)
      img_cell:
        - width: 22px
        - height: 22px
      icon:
        - width: 22px
        - height: 22px
        - color: var(--gray000)
  chips_small_active:
    variables:
      icon: null
    icon: '[[[ return variables.icon ]]]'
    show_name: false
    styles:
      card:
        - padding: 13px
        - border-radius: 50%
        - background: var(--active-pop)
      img_cell:
        - width: 22px
        - height: 22px
      icon:
        - width: 22px
        - height: 22px
        - color: var(--black)
  room_card:
    triggers_update: all
    variables:
      size: null
      player_image: null
      player: media_player
      name: Stue
      door1: binary_sensor.door1
      door2: binary_sensor.door2
      door3: binary_sensor.door3
      light1: null
      light2: null
      light3: null
      temp: null
      hum: null
      path: '#stue_nede'
      background: var(--gray000)
      color: var(--gray100)
      text: var(--gray800)
      radius: 36px 36px 6px 36px
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    tap_action:
      action: navigate
      navigation_path: '[[[ return variables.path ]]]'
    custom_fields:
      player:
        card:
          type: grid
          columns: 1
          square: fasle
          cards:
            - type: picture
              triggers_update: all
              image_entity: '[[[ return variables.player_image ]]]'
              card_mod:
                style: |
                  ha-card {
                    box-shadow: none !important;
                    transform: scale(0.75);
                    transform-origin: center;
                  }
            - type: custom:mini-media-player
              triggers_update: all
              entity: '[[[ return variables.player ]]]'
              background: transparent
              artwork: none
              runtime: true
              runtime_remaining: true
              name: true
              hide:
                power: true
                icon: true
                source: true
                volume: true
                controls: true
                name: true
                info: true
                runtime: false
                runtime_remaining: false
              card_mod:
                style: |
                  ha-card {
                    background: transparent !important;
                    box-shadow: none !important;
                    border: none !important;
                    transform: scale(0.9);
                    transform-origin: center;
                    margin-top: -77px;
                    padding: 0;
                    overflow: hidden;
                    clip-path: inset(20px 0px 0px 0px);  /* Crops top 20px */
                  }
      graph:
        card:
          type: custom:mini-graph-card
          triggers_update: all
          entities:
            - entity: '[[[ return variables.temp ]]]'
              show_fill: false
              show_line: true
          show:
            name: false
            icon: false
            state: false
          line_width: 2
      temp: |
        [[[ 
          let temp = states[variables.temp]?.state;
          let hum = states[variables.hum]?.state;

          // Convert temp and hum to numbers
          temp = temp ? parseFloat(temp).toFixed(1) : "";
          hum = hum ? parseFloat(hum).toFixed(0) : "";

          // Extract integer and decimal parts
          let [intPart, decPart] = temp.split(".");

          return `
            ${intPart}<span style="font-size: 0.6em; vertical-align: baseline">.${decPart}</span>°<span style="font-size: 0.3em; opacity: 0.7">${hum}%</span>
          `;
        ]]]
      btn:
        card:
          type: grid
          columns: 1
          square: true
          cards:
            - type: conditional
              conditions:
                - condition: or
                  conditions:
                    - entity: '[[[ return variables.door1 ]]]'
                      state: 'on'
                    - entity: '[[[ return variables.door2 ]]]'
                      state: 'on'
                    - entity: '[[[ return variables.door3 ]]]'
                      state: 'on'
              card:
                type: custom:mushroom-chips-card
                chips:
                  - type: template
                    icon: mdi:window-open-variant
                    card_mod:
                      style: |
                        ha-card {
                          zoom: 0.8;
                          --chip-background: var(--active-pop);
                          padding: 5px !important;
                          border-radius: 100px !important;
                        }
            - type: conditional
              conditions:
                - condition: or
                  conditions:
                    - entity: '[[[ return variables.light1 ]]]'
                      state: 'on'
                    - entity: '[[[ return variables.light2 ]]]'
                      state: 'on'
                    - entity: '[[[ return variables.light3 ]]]'
                      state: 'on'
              card:
                type: custom:mushroom-chips-card
                chips:
                  - type: template
                    icon: mdi:lightbulb
                    tap_action:
                      action: call-service
                      service: light.turn_off
                      data:
                        entity_id: '[[[ return variables.light1; ]]]'
    styles:
      card:
        - padding: 8px
        - height: 100%
        - border-radius: '[[[ return variables.radius ]]]'
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"i n n"". player .""graph graph graph""temp temp btn"'
        - grid-template-rows: 1fr max-content min-content
        - grid-template-columns: 1fr min-content min-content
      img_cell:
        - position: absolute
        - top: '-30px'
        - left: '-30px'
        - width: 80px
        - height: 80px
        - border-radius: 50%
        - background: var(--gray200)
        - z-index: 2
      icon:
        - width: 30px
        - padding-top: 20px
        - padding-left: 27px
        - color: var(--pop)
        - opacity: 0.8
      name:
        - justify-self: start
        - align-self: start
        - text-align: left
        - font-size: 0.8em
        - font-weight: 400
        - color: '[[[ return variables.text ]]]'
        - padding: 5px
        - letter-spacing: 0.3em
      custom_fields:
        player:
          - display: |
              [[[
                if (variables.player === "media_player") {
                  return 'none';
                }
                
                let entity_state = states[variables.player].state;
                if (['playing', 'paused', 'buffering'].includes(entity_state)) {
                  return 'block';
                }
                
                return 'none';
              ]]]
          - justify-self: left
          - position: absolute
          - left: '-13px'
          - top: 11px
          - width: 200px
        graph:
          - display: |
              [[[
                if (variables.player === "media_player") {
                  return 'block';
                }
                
                let entity_state = states[variables.player].state;
                if (['playing', 'paused', 'buffering'].includes(entity_state)) {
                  return 'none';
                }
                
                return 'block';
              ]]]
          - position: absolute
          - left: 0
          - bottom: 60px
          - width: 110%
          - z-index: 1
        temp:
          - justify-self: start
          - font-size: 2.75em
          - line-height: 1em
          - font-weight: 300
          - position: absolute
          - width: 120px
          - height: 100px
          - left: 0
          - bottom: 0
          - margin: 0 0 -45px -7px
          - color: '[[[ return variables.text ]]]'
          - padding: 0 0 6px 14px
          - z-index: 2
        btn:
          - justify-self: left
          - position: absolute
          - bottom: 5px
          - right: 0
          - margin: 0 5px 13px 0px
  room_card_og:
    variables:
      name: Stue
      icon: mdi:unicorn
      path: '#stue_nede'
      state: null
      background: var(--gray000)
      color: var(--green)
      text: var(--gray800)
      radius: 36px 36px 6px 36px
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    tap_action:
      action: navigate
      navigation_path: '[[[ return variables.path ]]]'
    custom_fields:
      temp: '[[[ return variables.state ]]]'
    styles:
      card:
        - padding: 8px
        - height: 100%
        - border-radius: '[[[ return variables.radius ]]]'
        - background: '[[[ return variables.background ]]]'
      grid:
        - grid-template-areas: '"n i" "temp temp"'
        - grid-template-rows: 1fr min-content
        - grid-template-columns: min-content 1fr
      icon:
        - width: 28px
        - color: var(--black)
      img_cell:
        - justify-self: end
        - background: '[[[ return variables.color ]]]'
        - border-radius: 100%
        - align-self: start
        - width: 60px
        - height: 60px
      name:
        - justify-self: start
        - align-self: start
        - text-align: left
        - font-size: 1em
        - font-weight: 500
        - color: '[[[ return variables.text ]]]'
        - padding: 14px
      custom_fields:
        temp:
          - justify-self: start
          - font-size: 3em
          - line-height: 1em
          - font-weight: 300
          - color: '[[[ return variables.text ]]]'
          - padding: 0 0 6px 14px
  sensor_small:
    variables:
      name: var_name
      label: var_label
      icon: var_icon
      background: var(--popupBG)
      text: var(--gray800)
    name: '[[[ return variables.name ]]]'
    label: '[[[ return variables.label ]]]'
    show_label: true
    icon: '[[[ return variables.icon ]]]'
    styles:
      grid:
        - grid-template-columns: 76px 1fr
        - grid-template-areas: '"i l" "i n"'
      icon:
        - width: 30px
        - color: var(--gray800)
      img_cell:
        - justify-self: start
        - width: 30px
        - height: 30px
        - background: rgba(var(--highlight))
        - padding: 14px
        - border-radius: 50%
      label:
        - justify-self: start
        - font-size: 16px
        - padding-top: 4px
        - font-weight: 500
        - color: var(--gray800)
      card:
        - height: 66px
        - border-radius: 75px
        - padding: 4px 20px 4px 4px
        - background: '[[[ return variables.background ]]]'
      name:
        - justify-self: start
        - font-size: 14px
        - color: var(--gray800)
        - opacity: 0.7
        - padding-bottom: 7px
views:
  - type: sections
    max_columns: 6
    title: MAIN
    path: main
    theme: cuisine
    sections:
      - type: grid
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                template: chips_big
                entity: sensor.rte_tempo_couleur_actuelle
                show_name: false
                variables:
                  icon: mdi:lightning-bolt
                tap_action:
                  action: navigate
                  navigation_path: '#tempo'
                state:
                  - value: Bleu
                    styles:
                      img_cell:
                        - background: var(--active-blue-dark)
                      icon:
                        - color: var(--gray800)
                  - value: Rouge
                    styles:
                      img_cell:
                        - background: var(--active-red)
                      icon:
                        - color: var(--gray800)
                  - value: Bleu
                    styles:
                      img_cell:
                        - background: var(--active-black)
                      icon:
                        - color: var(--gray800)
                styles:
                  card:
                    - background: |
                        [[[
                          return (states['sensor.rte_tempo_prochaine_couleur'].state === 'Bleu') ? 'var(--blue-dark)' :
                                 (states['sensor.rte_tempo_prochaine_couleur'].state === 'Blanc') ? 'var(--gray800)' :
                                 (states['sensor.rte_tempo_prochaine_couleur'].state === 'Rouge') ? 'var(--pop)' :
                                 'transparent';
                        ]]]
              - type: custom:gap-card
                height: 5
              - type: custom:button-card
                template: chips_big
                entity: cover.portail2
                variables:
                  name: fermé
                  icon: mdi:gate
                state:
                  - value: open
                    icon: mdi:gate-open
                    name: ouvert
                    styles:
                      img_cell:
                        - background: var(--gray000)
                      icon:
                        - color: var(--gray800)
                      card:
                        - background: var(--active-pop)
                styles:
                  img_cell:
                    - background: var(--active-green)
                tap_action:
                  action: call-service
                  service: cover.toggle
                  target:
                    entity_id: cover.portail2
                  data: {}
              - type: custom:button-card
                template: chips_big_active
                entity: binary_sensor.verrousoussol_contact
                variables:
                  name: >-
                    [[[ return states[entity.entity_id].state == 'off' ? 'fermé'
                    : 'ouvert'; ]]]
                  icon: mdi:garage-open-variant
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state == 'on' ?
                        'flex' : 'none'; ]]]
              - type: custom:button-card
                template: chips_big_active
                entity: sensor.count_nombre_ouvrants_ouverts
                variables:
                  name: '[[[ return ''x'' + states[entity.entity_id].state; ]]]'
                  icon: mdi:window-open-variant
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state == '0' ?
                        'none' : 'flex'; ]]]
              - type: custom:button-card
                template: chips_big
                entity: sensor.loki_activity_time
                variables:
                  name: |-
                    [[[
                      const v = Number(states[entity.entity_id]?.state) || 0;
                      return `Loki ${Math.round(v)}min`;
                    ]]]
                  icon: |-
                    [[[
                      const current = Number(states[entity.entity_id]?.state) || 0;
                      const goal = Number(states['sensor.loki_daily_goal']?.state) || 1;
                      const pct = Math.max(0, Math.min(100, (current / goal) * 100));

                      if (pct >= 100) return 'mdi:check-circle-outline';
                      if (pct < 10)   return 'mdi:circle-outline';

                      // Map 10–100% into slices 1–8
                      const slice = Math.min(8, Math.floor((pct - 1) / (90 / 8)) + 1);
                      return `mdi:circle-slice-${slice}`;
                    ]]]
                styles:
                  img_cell:
                    - background: |-
                        [[[
                          const current = Number(states[entity.entity_id]?.state) || 0;
                          const goal = Number(states['sensor.loki_daily_goal']?.state) || 1;
                          const pct = Math.max(0, Math.min(100, (current / goal) * 100));

                          if (pct >= 90) return 'var(--active-green)';
                          if (pct > 40)  return 'var(--active-orange)';
                          return 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big
                entity: sensor.mokka_battery_level
                variables:
                  name: |-
                    [[[ 
                      let battery = Math.round(states[entity.entity_id]?.state || 0); 
                      let charging = states['sensor.mokka_charging_status']?.state || 'Unknown';
                      return charging === 'InProgress' 
                        ? 'mokka ' + battery + '% | en charge' 
                        : 'mokka ' + battery + '%';
                    ]]]
                  icon: |-
                    [[[ 
                      let battery = Math.round(states[entity.entity_id]?.state || 0);
                      return battery < 30 
                        ? 'mdi:battery-alert-variant-outline' 
                        : battery === 100 
                          ? 'mdi:battery' 
                          : `mdi:battery-${Math.floor(battery / 10) * 10}`;
                    ]]]
                styles:
                  img_cell:
                    - background: |-
                        [[[ 
                          let battery = Math.round(states[entity.entity_id]?.state || 0);
                          return battery > 60 
                            ? 'var(--active-green)' 
                            : battery > 31 
                              ? 'var(--active-orange)' 
                              : 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big
                entity: sensor.battery
                variables:
                  name: |-
                    [[[ 
                      let battery = Math.round(states[entity.entity_id]?.state || 0);
                      let charging = states['binary_sensor.charging']?.state || 'unknown';
                      let charger = states['binary_sensor.charger']?.state || 'unknown';

                      if (charging === 'off' && charger === 'off') {
                        return `Tesla ${battery}%`;
                      } else if (charging === 'on' && charger === 'on') {
                        return `Tesla ${battery}% | en charge`;
                      } else if (charging === 'off' && charger === 'on') {
                        return `Tesla ${battery}% | branchée`;
                      } else {
                        return `Tesla ${battery}%`; // Default case
                      }
                    ]]]
                  icon: |-
                    [[[ 
                      let battery = Math.round(states[entity.entity_id]?.state || 0);
                      return battery < 30 
                        ? 'mdi:battery-alert-variant-outline' 
                        : battery === 100 
                          ? 'mdi:battery' 
                          : `mdi:battery-${Math.floor(battery / 10) * 10}`;
                    ]]]
                styles:
                  img_cell:
                    - background: |-
                        [[[ 
                          let battery = Math.round(states[entity.entity_id]?.state || 0);
                          return battery > 60 
                            ? 'var(--active-green)' 
                            : battery > 31 
                              ? 'var(--active-orange)' 
                              : 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big_active
                entity: sensor.jardin_switch_borne_electric_consumption_w
                variables:
                  name: >-
                    [[[ return Math.round(states[entity.entity_id]?.state || 0)
                    + 'W'; ]]]
                  icon: mdi:ev-station
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state > 300 ? 'flex'
                        : 'none'; ]]]
              - type: custom:button-card
                template: chips_big
                entity: sensor.jours_granules_restants
                variables:
                  name: >-
                    [[[ return Math.round(states[entity.entity_id]?.state || 0)+
                    'j'; ]]]
                  icon: mdi:calendar-end
                styles:
                  card:
                    - display: >-
                        [[[ return states['input_select.mode_saison']?.state ===
                        'hiver' ? 'flex' : 'none'; ]]]
                  img_cell:
                    - background: |-
                        [[[ 
                          let granulesRestants = Math.round(states['sensor.jours_granules_restants']?.state || 0);
                          let hiverRestants = Math.round(states['sensor.jours_d_hiver_restants']?.state || 0);
                          let rab = granulesRestants - hiverRestants;

                          return rab > 30 
                            ? 'var(--active-green)' 
                            : rab > 15 
                              ? 'var(--active-orange)' 
                              : 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big
                entity: input_number.granule_restant
                variables:
                  name: >-
                    [[[ return Math.round(states[entity.entity_id]?.state || 0)+
                    'kg'; ]]]
                  icon: mdi:silo
                styles:
                  card:
                    - display: >-
                        [[[ return states['input_select.mode_saison']?.state ===
                        'hiver' ? 'flex' : 'none'; ]]]
                  img_cell:
                    - background: |-
                        [[[ 
                          let granulesRestants = Math.round(states['input_number.granule_restant']?.state || 0);

                          return granulesRestants > 1500 
                            ? 'var(--active-green)' 
                            : granulesRestants > 500 
                              ? 'var(--active-orange)' 
                              : 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big
                entity: sensor.douches_douche1
                variables:
                  name: >-
                    [[[ return Math.round(states[entity.entity_id]?.state || 0)
                    + 'L'; ]]]
                  icon: mdi:shower-head
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state > 0 ? 'flex' :
                        'none'; ]]]
                  img_cell:
                    - background: |-
                        [[[ 
                          let douche = Math.round(states[entity.entity_id]?.state || 0);

                          return douche < 31 
                            ? 'var(--active-green)' 
                            : douche < 60 
                              ? 'var(--active-orange)' 
                              : 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big
                entity: sensor.douches_douche2
                variables:
                  name: >-
                    [[[ return Math.round(states[entity.entity_id]?.state || 0)
                    + 'L'; ]]]
                  icon: mdi:shower-head
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state > 0 ? 'flex' :
                        'none'; ]]]
                  img_cell:
                    - background: |-
                        [[[ 
                          let douche = Math.round(states[entity.entity_id]?.state || 0);

                          return douche < 31 
                            ? 'var(--active-green)' 
                            : douche < 60 
                              ? 'var(--active-orange)' 
                              : 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big
                entity: sensor.douches_douche3
                variables:
                  name: >-
                    [[[ return Math.round(states[entity.entity_id]?.state || 0)
                    + 'L'; ]]]
                  icon: mdi:shower-head
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state > 0 ? 'flex' :
                        'none'; ]]]
                  img_cell:
                    - background: |-
                        [[[ 
                          let douche = Math.round(states[entity.entity_id]?.state || 0);

                          return douche < 31 
                            ? 'var(--active-green)' 
                            : douche < 60 
                              ? 'var(--active-orange)' 
                              : 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big
                entity: sensor.douches_douche4
                variables:
                  name: >-
                    [[[ return Math.round(states[entity.entity_id]?.state || 0)
                    + 'L'; ]]]
                  icon: mdi:shower-head
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state > 0 ? 'flex' :
                        'none'; ]]]
                  img_cell:
                    - background: |-
                        [[[ 
                          let douche = Math.round(states[entity.entity_id]?.state || 0);

                          return douche < 31 
                            ? 'var(--active-green)' 
                            : douche < 60 
                              ? 'var(--active-orange)' 
                              : 'var(--active-red)';
                        ]]]
              - type: custom:button-card
                template: chips_big_active
                entity: sensor.p1p_01s00c370500195_current_stage
                tap_action:
                  action: navigate
                  navigation_path: '#bambu'
                variables:
                  name: |-
                    [[[ 
                      let totalMinutes = parseInt(states['sensor.p1p_01s00c370500195_remaining_time']?.state) || 0;
                      let hours = Math.floor(totalMinutes / 60);
                      let minutes = totalMinutes % 60;
                      let seconds = 0; // Default to 0 seconds since input is in minutes

                      return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                    ]]]
                  icon: mdi:printer-3d-nozzle
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state == 'printing'
                        ? 'flex' : 'none'; ]]]
              - type: custom:button-card
                template: chips_big_active
                entity: sensor.lave_linge_remaining_time
                variables:
                  name: '[[[ return states[entity.entity_id]?.state || ''N/A''; ]]]'
                  icon: mdi:washing-machine
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state == '0:00:00' ?
                        'none' : 'flex'; ]]]
              - type: custom:button-card
                template: chips_big_active
                entity: input_boolean.lavelingefini
                variables:
                  name: fini
                  icon: mdi:washing-machine
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state == 'on' ?
                        'flex' : 'none'; ]]]
              - type: custom:button-card
                template: chips_big_active
                entity: input_select.cuisine_lavevaisselle
                variables:
                  name: |-
                    [[[ 
                      let state = states['input_select.cuisine_lavevaisselle']?.state || 'unknown';

                      if (state === 'on') {
                        return states['sensor.temps_restant_lavevaisselle']?.state || 'N/A';
                      } else if (state === 'fini') {
                        return 'fini';
                      } else {
                        return 'off';
                      }
                    ]]]
                  icon: mdi:dishwasher
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id]?.state === 'off' ?
                        'none' : 'flex'; ]]]
              - type: custom:button-card
                template: chips_big_active
                entity: vacuum.alfred
                variables:
                  name: |-
                    [[[ 
                      let area = parseFloat(states['sensor.cuisine_alfred_cleaning_area']?.state) || 0;
                      return Math.round(area * 1.25) + '%';
                    ]]]
                  icon: mdi:robot-vacuum
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id]?.state === 'docked'
                        ? 'none' : 'flex'; ]]]
              - type: custom:button-card
                template: chips_big_active
                entity: input_boolean.vider_bac_poussiere
                variables:
                  name: plein
                  icon: mdi:robot-vacuum
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state == 'on' ?
                        'flex' : 'none'; ]]]
                tap_action:
                  action: toggle
              - type: custom:button-card
                template: chips_big_active
                entity: switch.deshumidificateur
                variables:
                  name: |-
                    [[[ 
                      let value = Math.round(parseFloat(states['sensor.cagibi_temperature_humidity']?.state) || 0);
                      return value + '%';
                    ]]]
                  icon: mdi:air-humidifier
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state == 'on' ?
                        'flex' : 'none'; ]]]
                tap_action:
                  action: toggle
              - type: custom:button-card
                template: chips_big_active
                entity: binary_sensor.cagibi_reservoir_deshumidificateur_water_leak
                variables:
                  name: plein
                  icon: mdi:air-humidifier
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state == 'on' ?
                        'flex' : 'none'; ]]]
                tap_action:
                  action: toggle
              - type: custom:button-card
                template: chips_big
                entity: binary_sensor.dimanche
                variables:
                  name: Poubelle Verte
                  icon: mdi:trash-can
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state === 'on' &&
                        (new Date().getHours() > 16) ? 'flex' : 'none'; ]]]
                  img_cell:
                    - background: var(--active-green)
              - type: custom:button-card
                template: chips_big
                entity: binary_sensor.lundi
                variables:
                  name: Poubelle Marron
                  icon: mdi:trash-can
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state === 'on' &&
                        (new Date().getHours() > 16) ? 'flex' : 'none'; ]]]
                  img_cell:
                    - background: var(--active-orange)
              - type: custom:button-card
                template: chips_big
                entity: binary_sensor.mardi
                variables:
                  name: Poubelle Jaune
                  icon: mdi:trash-can
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state === 'on' &&
                        (new Date().getHours() > 16) ? 'flex' : 'none'; ]]]
                  img_cell:
                    - background: var(--active-yellow)
                  icon:
                    - color: var(--gray000)
              - type: custom:button-card
                template: chips_big
                entity: binary_sensor.mercredi
                variables:
                  name: Poubelle Verte
                  icon: mdi:trash-can
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state === 'on' &&
                        (new Date().getHours() > 16) ? 'flex' : 'none'; ]]]
                  img_cell:
                    - background: var(--active-green)
              - type: custom:button-card
                template: chips_big_active
                entity: counter.compteur_sodastream
                variables:
                  name: '[[[ return ''x'' + states[entity.entity_id].state; ]]]'
                  icon: mdi:bottle-soda
                tap_action:
                  action: call-service
                  service: counter.reset
                  target:
                    entity_id: counter.compteur_sodastream
              - type: custom:button-card
                template: chips_big
                entity: binary_sensor.lundi
                variables:
                  name: Poubelle Jaune
                  icon: mdi:trash-can
                styles:
                  card:
                    - display: >-
                        [[[ return states[entity.entity_id].state === 'on' &&
                        (new Date().getHours() > 16) ? 'flex' : 'none'; ]]]
                  img_cell:
                    - background: var(--active-orange)
              - type: custom:button-card
                template: chips_big
                entity: sensor.eta_tibou
                variables:
                  name: >-
                    [[[ return 'ETA Tibou : ' + states[entity.entity_id]?.state
                    + ' min'; ]]]
                  icon: mdi:car-clock
                styles:
                  card:
                    - display: >-
                        [[[ return states['input_boolean.tibou_revient']?.state
                        === 'on' && states['person.emilie_goy']?.state !==
                        'home' ? 'flex' : 'none'; ]]]
                  img_cell:
                    - background: var(--active-pop)
              - type: custom:button-card
                template: chips_big
                entity: sensor.eta_mathieu
                variables:
                  name: >-
                    [[[ return 'ETA Nathieu : ' +
                    states[entity.entity_id]?.state + ' min'; ]]]
                  icon: mdi:car-clock
                styles:
                  card:
                    - display: >-
                        [[[ return
                        states['input_boolean.mathieu_revient']?.state === 'on'
                        && states['person.mathieu_goy']?.state !== 'home' ?
                        'flex' : 'none'; ]]]
                  img_cell:
                    - background: var(--active-pop)
          - type: custom:mod-card
            card_mod:
              style: |

                @media (min-width:180px) {
                  ha-card {
                    z-index:6;
                    position: fixed;
                    background: var(--gray800);
                    bottom: 10px;
                    left: 10px;
                    padding: 10px;
                    border-radius: 100px;
                    width: calc(100% - 20px);
                  }
                }

                @media (min-width:801px)  {
                  ha-card {
                    left: calc(20% + 43px);
                    width: calc(60% - 30px);
                  }
                }    
            card:
              type: grid
              square: false
              columns: 8
              cards:
                - type: custom:button-card
                  icon: mdi:lamps-outline
                  show_label: false
                  show_state: false
                  show_name: false
                  tap_action:
                    action: navigate
                    navigation_path: '#lumieres'
                  styles:
                    icon:
                      - width: 24px
                      - color: var(--gray000)
                    img_cell:
                      - width: 50px
                      - height: 50px
                    card:
                      - background: none
                      - padding: 0
                - type: custom:button-card
                  icon: mdi:window-shutter-cog
                  show_label: false
                  show_state: false
                  show_name: false
                  tap_action:
                    action: navigate
                    navigation_path: '#volets'
                  styles:
                    icon:
                      - width: 24px
                      - color: var(--gray000)
                    img_cell:
                      - width: 50px
                      - height: 50px
                    card:
                      - background: none
                      - padding: 0
                - type: custom:button-card
                  icon: mdi:security
                  show_label: false
                  show_state: false
                  show_name: false
                  tap_action:
                    action: navigate
                    navigation_path: '#securite'
                  styles:
                    icon:
                      - width: 24px
                      - color: var(--gray000)
                    img_cell:
                      - width: 50px
                      - height: 50px
                    card:
                      - background: none
                      - padding: 0
                - type: custom:button-card
                  icon: mdi:car
                  show_label: false
                  show_state: false
                  show_name: false
                  tap_action:
                    action: navigate
                    navigation_path: '#voitures'
                  styles:
                    icon:
                      - width: 24px
                      - color: var(--gray000)
                    img_cell:
                      - width: 50px
                      - height: 50px
                    card:
                      - background: none
                      - padding: 0
                - type: custom:button-card
                  icon: mdi:robot-vacuum
                  show_label: false
                  show_state: false
                  show_name: false
                  tap_action:
                    action: navigate
                    navigation_path: '#alfred'
                  styles:
                    icon:
                      - width: 24px
                      - color: var(--gray000)
                    img_cell:
                      - width: 50px
                      - height: 50px
                    card:
                      - background: none
                      - padding: 0
                - type: custom:button-card
                  icon: mdi:chart-bar
                  show_label: false
                  show_state: false
                  show_name: false
                  tap_action:
                    action: navigate
                    navigation_path: '#energie'
                  styles:
                    icon:
                      - width: 24px
                      - color: var(--gray000)
                    img_cell:
                      - width: 50px
                      - height: 50px
                    card:
                      - background: none
                      - padding: 0
                - type: custom:button-card
                  icon: mdi:access-point
                  show_label: false
                  show_state: false
                  show_name: false
                  tap_action:
                    action: navigate
                    navigation_path: '#appareils'
                  styles:
                    icon:
                      - width: 24px
                      - color: var(--gray000)
                    img_cell:
                      - width: 50px
                      - height: 50px
                    card:
                      - background: none
                      - padding: 0
                - type: custom:button-card
                  icon: mdi:chef-hat
                  show_label: false
                  show_state: false
                  show_name: false
                  tap_action:
                    action: navigate
                    navigation_path: '#menu'
                  styles:
                    icon:
                      - width: 24px
                      - color: var(--gray000)
                    img_cell:
                      - width: 50px
                      - height: 50px
                    card:
                      - background: none
                      - padding: 0
        column_span: 10
      - type: grid
        cards:
          - type: custom:gap-card
            height: 10
        column_span: 6
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                template: hc_security_card
                entity: alarm_control_panel.maison
                tap_action:
                  action: navigate
                  navigation_path: '#securite'
              - type: custom:gap-card
                height: 5
              - type: custom:button-card
                variables:
                  input_select: input_select.mode_volets
                  cover_entity1: cover.voletsmaison
                  cover_entity2: cover.voletsrdc
                  cover_entity3: cover.voletsetage
                  cover_entity4: cover.voletsmaison
                  name_entity1: maison
                  name_entity2: rdc
                  name_entity3: etage
                  name_entity4: auto
                  option_1: maison
                  option_2: rdc
                  option_3: etage
                  option_4: auto
                  active_color: var(--active-pop)
                  base_color: var(--gray400)
                entity: null
                show_state: false
                show_icon: false
                show_name: false
                triggers_update: all
                styles:
                  card:
                    - border-radius: 20px
                    - background: |
                        [[[
                          setTimeout(() => {
                            let inputSelect = states[variables.input_select]?.state;
                            if (!inputSelect || inputSelect === "unknown") {
                              console.log("Forcing Lovelace view reload...");
                              window.location.reload();  // Refreshes the UI if the entity is missing
                            }
                          }, 3000); // 3-second delay before checking
                        ]]]
                  name:
                    - color: var(--gray800)
                  custom_fields:
                    current_blind:
                      - margin-top: '-20px'
                  grid:
                    - grid-template-areas: >
                        "current_blind current_blind current_blind
                        current_blind"

                        ". action_card action_card ."
                    - grid-template-rows: auto
                    - grid-template-columns: 5% 45% 45% 5%
                custom_fields:
                  action_card:
                    card:
                      type: custom:button-card
                      styles:
                        grid:
                          - grid-template-areas: '"item1 item2 item3 item4"'
                          - grid-template-rows: 1fr
                          - grid-template-columns: auto
                          - column-gap: 10px
                          - row-gap: 10px
                        card:
                          - margin-bottom: '-10px'
                          - box-shadow: none
                          - padding: 5px
                          - border-radius: 50px
                          - background-color: var(--gray200)
                          - z-index: 2
                          - size: 100px
                      custom_fields:
                        item1:
                          card:
                            type: custom:button-card
                            entity: '[[[ return variables.input_select ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:home
                            styles:
                              icon:
                                - width: 20px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: transparent
                            state:
                              - value: '[[[ return variables.option_1 ]]]'
                                styles:
                                  card:
                                    - background: '[[[ return variables.active_color ]]]'
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return variables.input_select ]]]'
                              data:
                                option: '[[[ return variables.option_1 ]]]'
                        item2:
                          card:
                            type: custom:button-card
                            entity: '[[[ return variables.input_select ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:home-floor-0
                            styles:
                              icon:
                                - width: 20px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: transparent
                            state:
                              - value: '[[[ return variables.option_2 ]]]'
                                styles:
                                  card:
                                    - background: '[[[ return variables.active_color ]]]'
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return variables.input_select ]]]'
                              data:
                                option: '[[[ return variables.option_2 ]]]'
                        item3:
                          card:
                            type: custom:button-card
                            entity: '[[[ return variables.input_select ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:home-floor-1
                            styles:
                              icon:
                                - width: 20px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: transparent
                            state:
                              - value: '[[[ return variables.option_3 ]]]'
                                styles:
                                  card:
                                    - background: '[[[ return variables.active_color ]]]'
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return variables.input_select ]]]'
                              data:
                                option: '[[[ return variables.option_3 ]]]'
                        item4:
                          card:
                            type: custom:button-card
                            entity: '[[[ return variables.input_select ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:window-shutter-auto
                            styles:
                              icon:
                                - width: 20px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: transparent
                            state:
                              - value: '[[[ return variables.option_4 ]]]'
                                styles:
                                  card:
                                    - background: '[[[ return variables.active_color ]]]'
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return variables.input_select ]]]'
                              data:
                                option: '[[[ return variables.option_4 ]]]'
                  current_blind:
                    card:
                      updates_trigger:
                        - input_select.mode_volets
                      type: vertical-stack
                      cards:
                        - type: conditional
                          conditions:
                            - condition: state
                              entity: '[[[ return variables.input_select ]]]'
                              state: '[[[ return variables.option_1 ]]]'
                          card:
                            type: custom:button-card
                            template: hc_blind_card
                            entity: '[[[ return variables.cover_entity1 ]]]'
                            name: '[[[ return variables.name_entity1 ]]]'
                            show_label: true
                            styles:
                              card:
                                - background-color: transparent
                                - box-shadow: none
                        - type: conditional
                          conditions:
                            - condition: state
                              entity: '[[[ return variables.input_select ]]]'
                              state: '[[[ return variables.option_2 ]]]'
                          card:
                            type: custom:button-card
                            template: hc_blind_card
                            entity: '[[[ return variables.cover_entity2 ]]]'
                            name: '[[[ return variables.name_entity2 ]]]'
                            show_label: true
                            styles:
                              card:
                                - background-color: transparent
                                - box-shadow: none
                        - type: conditional
                          conditions:
                            - condition: state
                              entity: '[[[ return variables.input_select ]]]'
                              state: '[[[ return variables.option_3 ]]]'
                          card:
                            type: custom:button-card
                            template: hc_blind_card
                            entity: '[[[ return variables.cover_entity3 ]]]'
                            name: '[[[ return variables.name_entity3 ]]]'
                            show_label: true
                            styles:
                              card:
                                - background-color: transparent
                                - box-shadow: none
                        - type: conditional
                          conditions:
                            - condition: state
                              entity: '[[[ return variables.input_select ]]]'
                              state: '[[[ return variables.option_4 ]]]'
                          card:
                            type: custom:button-card
                            template: hc_blind_card
                            entity: '[[[ return variables.cover_entity4 ]]]'
                            name: '[[[ return variables.name_entity4 ]]]'
                            show_label: true
                            styles:
                              card:
                                - background-color: transparent
                                - box-shadow: none
              - type: custom:gap-card
                height: 5
              - type: custom:button-card
                entity: input_select.mode_ballon
                icon: mdi:water-boiler
                show_state: false
                show_icon: true
                show_name: true
                show_last_changed: false
                show_label: false
                variables:
                  color: var(--active-pop)
                styles:
                  grid:
                    - grid-template-areas: |
                        "n i"
                        "s i"
                        "action_card action_card"
                    - grid-template-columns: 1fr auto
                    - grid-template-rows: min-content 1fr
                  card:
                    - overflow: hidden
                    - padding: 10px
                    - pointer-events: none
                    - background: var(--gray000)
                    - position: relative
                  label:
                    - justify-self: start
                    - align-self: start
                    - font-family: Quicksand
                    - font-size: 12px
                    - font-weight: 500
                    - color: var(--gray800)
                  img_cell:
                    - position: absolute
                    - top: '-23px'
                    - right: '-13px'
                    - width: 80px
                    - height: 80px
                    - border-radius: 50%
                    - background: transparent
                  icon:
                    - width: 30px
                    - padding-top: 12px
                    - padding-right: 25px
                    - color: var(--gray800)
                    - opacity: 0.8
                  name:
                    - padding-left: 10px
                    - justify-self: start
                    - font-size: 1.5em
                    - font-weight: 400
                    - font-family: Quicksand
                    - letter-spacing: 0.3em
                state:
                  - value: 'off'
                    name: 'off'
                  - value: électrique
                    name: >
                      [[[ return "électrique"+ '<span style="font-size:0.4em;
                      font-weight:600; letter-spacing: 0em ;color:var(--pop)">'
                      +

                      states['sensor.chaufferie_prise_ballon_power'].state +
                      "W"]]]
                  - value: chaudière
                    name: chaudière
                  - value: marche forcée
                    name: >
                      [[[ return "manuel"+ '<span style="font-size:0.4em;
                      letter-spacing: 0em ; emfont-weight:600;
                      color:var(--pop)">' +

                      states['sensor.chaufferie_prise_ballon_power'].state +
                      "W"]]]
                custom_fields:
                  action_card:
                    card:
                      type: custom:button-card
                      styles:
                        grid:
                          - grid-template-areas: '"item1 item2 item3 item4"'
                          - grid-template-columns: repeat(4, 1fr)
                          - row-gap: 10px
                        card:
                          - box-shadow: none
                          - margin-top: 10px
                          - padding: 5px
                          - border-radius: 50px
                          - background-color: var(--gray200)
                      custom_fields:
                        item1:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:power
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: 'off'
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: 'off'
                        item2:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:lightning-bolt
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: électrique
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: électrique
                        item3:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:fire
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: chaudière
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: chaudière
                        item4:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:toggle-switch-outline
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: marche forcée
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: marche forcée
              - type: custom:gap-card
                height: 5
              - type: custom:button-card
                entity: input_select.mode_chauffage
                icon: mdi:thermostat
                show_state: false
                show_icon: true
                show_name: true
                show_last_changed: false
                show_label: false
                variables:
                  color: var(--active-pop)
                styles:
                  grid:
                    - grid-template-areas: |
                        "n i"
                        "s i"
                        "action_card action_card"
                    - grid-template-columns: 1fr auto
                    - grid-template-rows: min-content 1fr
                  card:
                    - overflow: hidden
                    - padding: 10px
                    - pointer-events: none
                    - background: var(--gray000)
                    - position: relative
                  label:
                    - justify-self: start
                    - align-self: start
                    - font-family: Quicksand
                    - font-size: 12px
                    - font-weight: 500
                    - color: var(--gray800)
                  img_cell:
                    - position: absolute
                    - top: '-23px'
                    - right: '-13px'
                    - width: 80px
                    - height: 80px
                    - border-radius: 50%
                    - background: transparent
                  icon:
                    - width: 30px
                    - padding-top: 12px
                    - padding-right: 25px
                    - color: var(--gray800)
                    - opacity: 0.8
                  name:
                    - padding-left: 10px
                    - justify-self: start
                    - font-size: 1.5em
                    - font-weight: 400
                    - font-family: Quicksand
                    - letter-spacing: 0.3em
                state:
                  - value: 'off'
                    name: 'off'
                  - value: confort
                    name: >
                      [[[ return "confort" + '<span style="font-size:0.5em;
                      letter-spacing:0em; font-weight:600; color:var(--pop)">'
                      +states['climate.salle_a_manger'].attributes.temperature
                      +"°C</span>"]]]
                  - value: nuit
                    name: >
                      [[[ return "nuit"+ '<span style="font-size:0.5em;
                      letter-spacing:0em; font-weight:600; color:var(--pop)">' +
                      states['climate.salle_a_manger'].attributes.temperature +
                      "°C"]]]
                  - value: reduit
                    name: >
                      [[[ return "réduit"+ '<span style="font-size:0.5em;
                      letter-spacing:0em; font-weight:600;
                      color:var(--pop)color:var(--pop)">' +

                      states['climate.salle_a_manger'].attributes.temperature +
                      "°C"]]]
                  - value: vacances
                    name: >
                      [[[ return "vacances"+ '<span style="font-size:0.5em;
                      letter-spacing:0em; font-weight:600; color:var(--pop)
                      color:var(--pop)">' +

                      states['climate.salle_a_manger'].attributes.temperature +
                      "°C"]]]
                  - value: home office
                    name: >
                      [[[ return "home office"+ '<span style="font-size:0.5em;
                      letter-spacing:0em; font-weight:600; color:var(--pop)">' +

                      states['climate.salle_a_manger'].attributes.temperature +
                      "°C"]]]
                  - value: turbo
                    name: >
                      [[[ return "turbo"+ '<span style="font-size:0.5em;
                      letter-spacing:0em; font-weight:600; color:var(--pop)">' +

                      states['climate.salle_a_manger'].attributes.temperature +
                      "°C"]]]
                custom_fields:
                  action_card:
                    card:
                      type: custom:button-card
                      styles:
                        grid:
                          - grid-template-areas: '"item1 item4 item5 item6 item7"'
                          - grid-template-columns: repeat(5, 1fr)
                          - row-gap: 10px
                        card:
                          - box-shadow: none
                          - margin-top: 10px
                          - padding: 5px
                          - border-radius: 50px
                          - background-color: var(--gray200)
                      custom_fields:
                        item1:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:power
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: 'off'
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: 'off'
                        item4:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:moon-waning-crescent
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: nuit
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: nuit
                        item5:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:desk
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: home office
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: home office
                        item6:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:thermometer-plus
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: confort
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: confort
                        item7:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:fire
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: turbo
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: turbo
            columns: 1
          - type: custom:gap-card
            grid_options:
              columns: 2
              rows: auto
          - type: grid
            square: false
            columns: 1
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:local-conditional-card
                    id: premier
                    default: hide
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: 1fr max-content max-content max-content
                            grid-template-rows: min-content
                            grid-template-areas: |
                              "one two three four five"  
                          cards:
                            - type: custom:button-card
                              view_layout:
                                grid-area: one
                              styles:
                                card:
                                  - box-shadow: none
                                  - background: none
                                  - padding: 14px 0 15px 0
                                  - '--mdc-ripple-press-opacity': 0
                                name:
                                  - font-size: 16px
                                  - font-weight: 500
                                  - justify-self: start
                                  - align-self: center
                            - type: custom:button-card
                              template: chips_big
                              styles:
                                card:
                                  - margin-left: 0px
                                  - margin-top: 0px
                              view_layout:
                                grid-area: five
                              variables:
                                name: Favoris
                                icon: mdi:heart
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: show
                                    - etage: hide
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small_active
                              view_layout:
                                grid-area: two
                              variables:
                                icon: mdi:home-floor-0
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: show
                                    - tout: hide
                                    - etage: hide
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: three
                              variables:
                                icon: mdi:home-floor-1
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: hide
                                    - etage: show
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: four
                              variables:
                                icon: mdi:home-floor-negative-1
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: hide
                                    - etage: hide
                                    - soussol: show
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: 1fr 1fr 1fr
                            grid-template-rows: 146px 70px 146px
                            grid-template-areas: |
                              "sdb bureau salon"
                              "sdb sam salon"
                              "cuisine sam salon" 
                          cards:
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: '#salon'
                              view_layout:
                                grid-area: salon
                              template: room_card
                              triggers_update: all
                              variables:
                                player: media_player.shield_3
                                player_image: image.image_jellyfin_salon
                                door1: binary_sensor.salon_capteurfenetre_contact
                                door2: >-
                                  binary_sensor.entree_capteurporteentree_contact
                                light1: light.lumieres_ambiance
                                light2: light.salon_lumieres
                                temp: >-
                                  sensor.temperature_humidity_sensor_37ff_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_37ff_humidity
                                name: |
                                  [[[ return 'Salon']]]
                                icon: mdi:sofa
                                path: '#salon'
                                radius: 36px 36px 6px 36px
                            - type: custom:button-card
                              view_layout:
                                grid-area: cuisine
                              template: room_card
                              variables:
                                door1: binary_sensor.cuisine_capteurfenetre_contact
                                door2: >-
                                  binary_sensor.cuisine_capteurportefenetre_contact
                                name: |
                                  [[[ return 'Cuisine']]]
                                icon: mdi:countertop
                                temp: >-
                                  sensor.temperature_humidity_sensor_f8e9_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_f8e9_humidity
                                path: '#cuisine'
                                radius: 36px 36px 36px 6px
                            - type: custom:button-card
                              view_layout:
                                grid-area: bureau
                              template: room_card
                              variables:
                                door1: binary_sensor.bureau_tibou_baie_ouest
                                door2: binary_sensor.bureau_tibou_baie_sud
                                name: |
                                  [[[ return 'Bureau']]]
                                icon: mdi:desk
                                path: '#bureau'
                                temp: sensor.gw1100a_indoor_temperature
                                hum: sensor.gw1100a_indoor_humidity
                                light1: light.bureautibou_ampoule
                                radius: 36px 6px 36px 36px
                            - type: custom:button-card
                              view_layout:
                                grid-area: sam
                              template: room_card
                              variables:
                                door1: binary_sensor.salle_a_manger_baie
                                door2: binary_sensor.sejour_capteurvelux_contact
                                door3: binary_sensor.sejour_capteurfenetre_contact
                                name: |
                                  [[[ return 'Salle<br>à Manger']]]
                                icon: mdi:silverware-variant
                                path: '#sam'
                                temp: >-
                                  sensor.temperature_humidity_sensor_37ff_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_37ff_humidity
                                radius: 6px 36px 36px 36px
                            - type: custom:button-card
                              view_layout:
                                grid-area: sdb
                              template: room_card
                              variables:
                                door1: >-
                                  binary_sensor.salledebainrdc_capteurfenetre_contact
                                name: |
                                  [[[ return 'Salle<br>de Bain']]]
                                icon: mdi:shower
                                temp: sensor.sdbrdc_temperature_temperature
                                hum: sensor.sdbrdc_temperature_humidity
                                path: '#sdbrdc'
                                radius: 36px 36px 6px 36px
                      columns: 1
                  - type: custom:local-conditional-card
                    id: etage
                    default: hide
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: 1fr max-content max-content max-content
                            grid-template-rows: min-content
                            grid-template-areas: |
                              "one two three four five"  
                          cards:
                            - type: custom:button-card
                              view_layout:
                                grid-area: one
                              styles:
                                card:
                                  - box-shadow: none
                                  - background: none
                                  - padding: 14px 0 15px 0
                                  - '--mdc-ripple-press-opacity': 0
                                name:
                                  - font-size: 16px
                                  - font-weight: 500
                                  - justify-self: start
                                  - align-self: center
                            - type: custom:button-card
                              template: chips_big
                              styles:
                                card:
                                  - margin-left: 0px
                                  - margin-top: 0px
                              view_layout:
                                grid-area: five
                              variables:
                                name: Favoris
                                icon: mdi:heart
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: show
                                    - etage: hide
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: two
                              variables:
                                icon: mdi:home-floor-0
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: show
                                    - tout: hide
                                    - etage: hide
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small_active
                              view_layout:
                                grid-area: three
                              variables:
                                icon: mdi:home-floor-1
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: hide
                                    - etage: show
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: four
                              variables:
                                icon: mdi:home-floor-negative-1
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: hide
                                    - etage: hide
                                    - soussol: show
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: 1fr 1fr 1fr
                            grid-template-rows: 146px 70px 146px
                            grid-template-areas: |
                              "theodore faustine natibou"
                              "sdbetage faustine natibou"
                              "sdbetage degagement natibou" 
                          cards:
                            - type: custom:button-card
                              view_layout:
                                grid-area: degagement
                              template: room_card
                              variables:
                                name: |
                                  [[[ return 'Biblio']]]
                                icon: mdi:library
                                path: '#degagement'
                                temp: sensor.degagement_oeil_air_temperature
                                hum: >-
                                  sensor.chambrenatibou_capteurtemperature_humidity
                                radius: 36px 36px 6px 36px
                              custom_fields:
                                player:
                                  card:
                                    type: conditional
                                    conditions:
                                      - condition: or
                                        conditions:
                                          - condition: state
                                            entity: media_player.shield_3
                                            state: playing
                                          - condition: state
                                            entity: media_player.shield_3
                                            state: paused
                                          - condition: state
                                            entity: media_player.shield_3
                                            state: buffering
                                    card:
                                      type: grid
                                      columns: 1
                                      square: fasle
                                      cards:
                                        - type: picture
                                          image_entity: image.image_jellyfin_salon
                                          card_mod:
                                            style: |
                                              ha-card {
                                                transform: scale(0.75);
                                                transform-origin: center;
                                              }
                                        - type: custom:mini-media-player
                                          entity: media_player.shield_3
                                          background: trasparent
                                          artwork: none
                                          runtime: true
                                          runtime_remaining: true
                                          name: true
                                          hide:
                                            power: true
                                            icon: true
                                            source: true
                                            volume: true
                                            controls: true
                                            name: true
                                            info: true
                                            runtime: false
                                            runtime_remaining: false
                                          card_mod:
                                            style: |
                                              ha-card {
                                                background: transparent !important;
                                                box-shadow: none !important;
                                                border: none !important;
                                                transform: scale(0.9);
                                                transform-origin: center;
                                                margin-top: -77px;
                                                padding: 0;
                                                overflow: hidden;
                                                clip-path: inset(20px 0px 0px 0px);  /* Crops top 20px */
                                              }
                              styles:
                                grid:
                                  - grid-template-areas: '"i n n" ". player .""temp temp btn"'
                                  - grid-template-rows: 1fr 1fr min-content
                                  - grid-template-columns: 1fr min-content min-content
                                custom_fields:
                                  player:
                                    - justify-self: left
                                    - position: absolute
                                    - left: '-13px'
                                    - top: 7px
                                    - width: 200px
                            - type: custom:button-card
                              view_layout:
                                grid-area: theodore
                              template: room_card
                              variables:
                                door1: >-
                                  binary_sensor.chambretheodore_capteurvelux_contact
                                light1: light.wled_theodore
                                temp: >-
                                  sensor.temperature_humidity_sensor_1514_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_1514_humidity
                                name: |
                                  [[[ return 'Théodore']]]
                                icon: mdi:deathly-hallows
                                path: '#theodore'
                                radius: 36px 6px 36px 36px
                            - type: custom:button-card
                              view_layout:
                                grid-area: faustine
                              template: room_card
                              variables:
                                door1: >-
                                  binary_sensor.chambrefaustine_capteurvelux_contact
                                temp: >-
                                  sensor.temperature_humidity_sensor_1373_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_1373_humidity
                                light1: light.lampes_faustine
                                name: |
                                  [[[ return 'Faustine']]]
                                icon: mdi:crown
                                path: '#faustine'
                                radius: 36px 36px 36px 6px
                            - type: custom:button-card
                              view_layout:
                                grid-area: sdbetage
                              template: room_card
                              variables:
                                door1: binary_sensor.sdbetage_fenetre_contact
                                name: |
                                  [[[ return 'Salle<br>de Bain']]]
                                icon: mdi:shower-head
                                temp: sensor.sdbetage_temperature_temperature
                                hum: sensor.sdbetage_temperature_humidity
                                path: '#sdbetage'
                                radius: 36px 36px 6px 36px
                            - type: custom:button-card
                              view_layout:
                                grid-area: natibou
                              template: room_card
                              variables:
                                door1: >-
                                  binary_sensor.chambrenatibou_capteurvelux_contact
                                door2: >-
                                  binary_sensor.chambrenatibou_capteurfenetre_contact
                                light1: light.natibou_ventilateur
                                name: |
                                  [[[ return 'Natibou']]]
                                icon: mdi:bed
                                temp: >-
                                  sensor.chambrenatibou_capteurtemperature_temperature
                                hum: >-
                                  sensor.chambrenatibou_capteurtemperature_humidity
                                path: '#natibou'
                                radius: 6px 36px 36px 36px
                      columns: 1
                  - type: custom:local-conditional-card
                    id: soussol
                    default: hide
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: 1fr max-content max-content max-content
                            grid-template-rows: min-content
                            grid-template-areas: |
                              "one two three four five"  
                          cards:
                            - type: custom:button-card
                              view_layout:
                                grid-area: one
                              styles:
                                card:
                                  - box-shadow: none
                                  - background: none
                                  - padding: 14px 0 15px 0
                                  - '--mdc-ripple-press-opacity': 0
                                name:
                                  - font-size: 16px
                                  - font-weight: 500
                                  - justify-self: start
                                  - align-self: center
                            - type: custom:button-card
                              template: chips_big
                              styles:
                                card:
                                  - margin-left: 0px
                                  - margin-top: 0px
                              view_layout:
                                grid-area: five
                              variables:
                                name: Favoris
                                icon: mdi:heart
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: show
                                    - etage: hide
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: two
                              variables:
                                icon: mdi:home-floor-0
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: show
                                    - tout: hide
                                    - etage: hide
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: three
                              variables:
                                icon: mdi:home-floor-1
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: hide
                                    - etage: show
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small_active
                              view_layout:
                                grid-area: four
                              variables:
                                icon: mdi:home-floor-negative-1
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: hide
                                    - etage: hide
                                    - soussol: show
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: 1fr 1fr 1fr
                            grid-template-rows: 146px 70px 146px
                            grid-template-areas: |
                              "recroom cagibi gomcave"
                              "recroom atelier gomcave"
                              "recroom atelier buanderie"   
                          cards:
                            - type: custom:button-card
                              view_layout:
                                grid-area: recroom
                              template: room_card
                              variables:
                                name: |
                                  [[[ return 'Salle Ciné']]]
                                icon: mdi:play
                                light1: light.recroom_kallax
                                temp: sensor.salledejeu_temperature_temperature
                                hum: sensor.salledejeu_temperature_humidity
                                path: '#recroom'
                                size: large
                                radius: 6px 36px 36px 36px
                                player: media_player.iphone_25
                                player_image: image.image_jellyfin_g0m
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: '#cagibi'
                              view_layout:
                                grid-area: cagibi
                              template: room_card
                              variables:
                                name: |
                                  [[[ return 'Cagibi']]]
                                icon: mdi:library-shelves
                                temp: sensor.cagibi_temperature_temperature
                                hum: sensor.cagibi_temperature_humidity
                                path: '#cagibi'
                                radius: 36px 36px 36px 6px
                            - type: custom:button-card
                              view_layout:
                                grid-area: buanderie
                              template: room_card
                              variables:
                                name: |
                                  [[[ return 'Buanderie']]]
                                icon: mdi:washing-machine
                                temp: sensor.buanderie_temperature_temperature
                                hum: sensor.buanderie_temperature_humidity
                                path: '#buanderie'
                                radius: 36px 6px 36px 36px
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: '#atelier'
                              view_layout:
                                grid-area: atelier
                              template: room_card
                              variables:
                                door1: binary_sensor.verrousoussol_contact
                                light1: light.atelier_lampe
                                temp: sensor.garage_oeil_air_temperature
                                hum: sensor.buanderie_temperature_humidity
                                name: |
                                  [[[ return 'Atelier']]]
                                icon: mdi:tools
                                path: '#atelier'
                                radius: 6px 36px 36px 36px
                            - type: custom:button-card
                              view_layout:
                                grid-area: gomcave
                              template: room_card
                              variables:
                                name: |
                                  [[[ return 'g0m<br>cave']]]
                                icon: mdi:desktop-tower-monitor
                                temp: >-
                                  sensor.temperature_humidity_sensor_37ff_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_37ff_humidity
                                light1: light.wled_bureau
                                light2: light.wled_canape
                                path: '#gomcave'
                                radius: 36px 36px 6px 36px
                      columns: 1
                  - type: custom:local-conditional-card
                    id: tout
                    default: show
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: 1fr max-content max-content max-content
                            grid-template-rows: min-content
                            grid-template-areas: |
                              "one two three four five"  
                          cards:
                            - type: custom:button-card
                              view_layout:
                                grid-area: one
                              styles:
                                card:
                                  - box-shadow: none
                                  - background: none
                                  - padding: 14px 0 15px 0
                                  - '--mdc-ripple-press-opacity': 0
                                name:
                                  - font-size: 16px
                                  - font-weight: 500
                                  - justify-self: start
                                  - align-self: center
                            - type: custom:button-card
                              template: chips_big_active
                              styles:
                                card:
                                  - margin-left: 0px
                                  - margin-top: 0px
                              view_layout:
                                grid-area: five
                              variables:
                                name: Favoris
                                icon: mdi:heart
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: show
                                    - etage: hide
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: two
                              variables:
                                icon: mdi:home-floor-0
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: show
                                    - tout: hide
                                    - etage: hide
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: three
                              variables:
                                icon: mdi:home-floor-1
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: hide
                                    - etage: show
                                    - soussol: hide
                            - type: custom:button-card
                              template: chips_small
                              view_layout:
                                grid-area: four
                              variables:
                                icon: mdi:home-floor-negative-1
                              tap_action:
                                action: fire-dom-event
                                local_conditional_card:
                                  action: set
                                  ids:
                                    - premier: hide
                                    - tout: hide
                                    - etage: hide
                                    - soussol: show
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          layout:
                            grid-template-columns: 1fr 1fr 1fr
                            grid-template-rows: 181px 181px
                            grid-template-areas: |
                              "salon faustine recroom"
                              "salon theodore recroom" 
                          cards:
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: '#salon'
                              view_layout:
                                grid-area: salon
                              template: room_card
                              variables:
                                player: media_player.shield_3
                                player_image: image.image_jellyfin_salon
                                door1: binary_sensor.salon_capteurfenetre_contact
                                door2: >-
                                  binary_sensor.entree_capteurporteentree_contact
                                light1: light.lumieres_ambiance
                                light2: light.salon_lumieres
                                temp: >-
                                  sensor.temperature_humidity_sensor_37ff_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_37ff_humidity
                                name: |
                                  [[[ return 'Salon']]]
                                icon: mdi:sofa
                                path: '#salon'
                                radius: 36px 36px 6px 36px
                            - type: custom:button-card
                              view_layout:
                                grid-area: theodore
                              template: room_card
                              variables:
                                door1: >-
                                  binary_sensor.chambretheodore_capteurvelux_contact
                                light1: light.wled_theodore
                                temp: >-
                                  sensor.temperature_humidity_sensor_1514_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_1514_humidity
                                name: |
                                  [[[ return 'Théodore']]]
                                icon: mdi:deathly-hallows
                                path: '#theodore'
                                radius: 36px 6px 36px 36px
                            - type: custom:button-card
                              view_layout:
                                grid-area: faustine
                              template: room_card
                              variables:
                                door1: >-
                                  binary_sensor.chambrefaustine_capteurvelux_contact
                                temp: >-
                                  sensor.temperature_humidity_sensor_1373_temperature
                                hum: >-
                                  sensor.temperature_humidity_sensor_1373_humidity
                                light1: light.lampes_faustine
                                name: |
                                  [[[ return 'Faustine']]]
                                icon: mdi:crown
                                path: '#faustine'
                                radius: 36px 36px 36px 6px
                            - type: custom:button-card
                              view_layout:
                                grid-area: recroom
                              template: room_card
                              variables:
                                name: |
                                  [[[ return 'Salle Ciné']]]
                                icon: mdi:play
                                light1: light.recroom_kallax
                                temp: sensor.salledejeu_temperature_temperature
                                hum: sensor.salledejeu_temperature_humidity
                                path: '#recroom'
                                size: large
                                radius: 6px 36px 36px 36px
                                player: media_player.shield_sdj_2
                                player_image: image.image_jellyfin_sdj
                      columns: 1
                grid_options:
                  columns: 15
                  rows: auto
                card_mod:
                  style: |
                    ha-card {
                      background-color: transparent;
                      border: transparent;
                      margin-top: -50px;  # Adjust the margin-top as needed
                      margin-bottom: -20px;  # Adjust the margin-top as needed
                    }
              - type: map
                aspect_ratio: '129:100'
                default_zoom: 12
                auto_fit: true
                entities:
                  - entity: person.mathieu_goy
                  - entity: person.emilie_goy
                  - entity: person.loki
                theme_mode: auto
            grid_options:
              columns: 18
              rows: auto
          - type: custom:gap-card
            grid_options:
              columns: 2
              rows: auto
          - square: false
            type: grid
            cards:
              - type: grid
                columns: 2
                cards:
                  - type: custom:flex-horseshoe-card
                    entities:
                      - entity: sensor.electricite_daily
                        decimals: 0
                        name: électricité
                        unit: kWh
                        tap_action:
                          action: navigate
                          navigation_path: /dashboard-cuisine/consos
                      - entity: sensor.salle_serveur_wattmetre_electric_consumption_w
                        decimals: 0
                        unit: W
                        icon: mdi:home
                        tap_action:
                          action: navigate
                          navigation_path: /dashboard-cuisine/consos
                      - entity: sensor.puissance_solaire
                        decimals: 0
                        unit: W
                        icon: mdi:solar-power-variant
                        tap_action:
                          action: navigate
                          navigation_path: /dashboard-cuisine/consos
                    show:
                      horseshoe_style: lineargradient
                    layout:
                      hlines:
                        - id: 0
                          xpos: 50
                          ypos: 42
                          length: 40
                          styles:
                            - stroke: var(--primary-text-color);
                            - stroke-width: 5;
                            - stroke-linecap: round;
                            - opacity: 0.7;
                      states:
                        - id: 0
                          entity_index: 0
                          xpos: 50
                          ypos: 34
                          styles:
                            - font-size: 3em;
                        - id: 1
                          entity_index: 1
                          xpos: 40
                          ypos: 57
                          styles:
                            - text-anchor: start;
                            - font-size: 1.5em;
                        - id: 2
                          entity_index: 2
                          xpos: 40
                          ypos: 72
                          styles:
                            - text-anchor: start;
                            - font-size: 1.5em;
                      icons:
                        - id: 0
                          entity_index: 1
                          xpos: 37
                          ypos: 57
                          align: end
                          size: 1.3
                        - id: 1
                          entity_index: 2
                          xpos: 37
                          ypos: 72
                          align: end
                          size: 1.3
                      names:
                        - id: 0
                          entity_index: 0
                          xpos: 50
                          ypos: 90
                          styles:
                            - color: rgba(var(--pop-RGB),1);
                            - font-size: 1.2em;
                            - opacity: 0.7;
                            - letter-spacing: 0.4em;
                            - text-transform: lowercase;
                    horseshoe_scale:
                      min: 0
                      max: 100
                      color: rgba(var(--gray200-RGB))
                    color_stops:
                      '0': rgba(var(--pop-RGB),1)
                      '80': rgba(var(--pop-RGB2),1)
                    card_mod:
                      style: |
                        ha-card {
                          background-color: var(--gray000);
                          border: transparent;
                          --primary-text-color: rgb(var(--gray800-RGB))
                  - type: custom:flex-horseshoe-card
                    entities:
                      - entity: sensor.compteur_eau_litres
                        decimals: 0
                        name: eau
                        unit: L
                        tap_action:
                          action: navigate
                          navigation_path: /dashboard-cuisine/consos
                      - entity: sensor.energy_pellets_daily
                        decimals: 0
                        unit: kg
                        icon: mdi:silo
                        tap_action:
                          action: navigate
                          navigation_path: /dashboard-cuisine/consos
                      - entity: sensor.niveau_cuve
                        decimals: 0
                        unit: null
                        icon: mdi:car-coolant-level
                        tap_action:
                          action: navigate
                          navigation_path: /dashboard-cuisine/consos
                    show:
                      horseshoe_style: lineargradient
                    layout:
                      hlines:
                        - id: 0
                          xpos: 50
                          ypos: 42
                          length: 40
                          styles:
                            - stroke: var(--primary-text-color);
                            - stroke-width: 5;
                            - stroke-linecap: round;
                            - opacity: 0.7;
                      states:
                        - id: 0
                          entity_index: 0
                          xpos: 50
                          ypos: 34
                          styles:
                            - font-size: 3em;
                        - id: 1
                          entity_index: 1
                          xpos: 40
                          ypos: 57
                          styles:
                            - text-anchor: start;
                            - font-size: 1.5em;
                        - id: 2
                          entity_index: 2
                          xpos: 40
                          ypos: 72
                          styles:
                            - text-anchor: start;
                            - font-size: 1.5em;
                      icons:
                        - id: 0
                          entity_index: 1
                          xpos: 37
                          ypos: 57
                          align: end
                          size: 1.3
                        - id: 1
                          entity_index: 2
                          xpos: 37
                          ypos: 72
                          align: end
                          size: 1.3
                      names:
                        - id: 0
                          entity_index: 0
                          xpos: 50
                          ypos: 90
                          styles:
                            - font-size: 1.2em;
                            - opacity: 0.7;
                            - letter-spacing: 0.4em;
                            - text-transform: lowercase
                    horseshoe_scale:
                      min: 0
                      max: 400
                      color: rgba(var(--gray200-RGB))
                    color_stops:
                      '0': rgba(var(--pop-RGB),1)
                      '300': rgba(var(--pop-RGB2),1)
                    card_mod:
                      style: |
                        ha-card {
                          background-color: var(--gray000);
                          border: transparent;
                          --primary-text-color: rgb(var(--gray800-RGB))
              - type: custom:button-card
                entity: sensor.gw1100a_outdoor_temperature
                show_name: true
                show_icon: false
                variables:
                  color: var(--pop)
                show_state: false
                name: |
                  [[[ 
                    let temp = Number(states['sensor.gw1100a_outdoor_temperature']?.state);
                    let hum = Number(states['sensor.gw1100a_humidity']?.state);          
                    temp = !isNaN(temp) ? temp.toFixed(1) : "";
                    hum = !isNaN(hum) ? hum.toFixed(0) : "";         
                    let [intPart, decPart] = temp ? temp.split(".") : ["", ""];          
                    return temp ? `
                      ${intPart}<span style="font-size: 0.6em; vertical-align: baseline">.${decPart}</span>°<span style="font-size: 0.3em; opacity: 0.7">${hum}%</span>
                    ` : "";
                  ]]]
                styles:
                  card:
                    - margin-top: '-10px'
                  grid:
                    - grid-template-areas: |
                        'weather weather'
                        'n .'
                        'graph graph'
                    - grid-template-rows: min-content
                    - padding-bottom: 0px
                  name:
                    - margin-top: 0px
                    - justify-self: start
                    - margin-left: 10px
                    - font-weight: 400
                    - font-size: 5rem
                    - z-index: 2
                  custom_fields:
                    weather:
                      - margin-top: '-10px'
                    graph:
                      - margin-top: '-80px'
                      - z-index: 1
                custom_fields:
                  weather:
                    card:
                      type: weather-forecast
                      entity: weather.forecast_home
                      secondary_info_attribute: humidity
                      show_current: false
                      show_forecast: true
                      forecast_type: daily
                      view_layout:
                        grid-area: meteo
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - entity: '[[[ return entity.entity_id ]]]'
                          show_fill: false
                          show_line: true
                      show:
                        name: false
                        icon: false
                        state: false
                      line_width: 2
                      line_color: '[[[ return variables.color ]]]'
              - type: vertical-stack
                cards:
                  - type: custom:button-card
                    color_type: blank-card
                    styles:
                      card:
                        - height: 8px
                  - type: custom:button-card
                    entity: sensor.my_natibou_calendar
                    show_icon: false
                    show_name: false
                    state:
                      - operator: template
                        value: |
                          [[[
                            const startRaw = entity.attributes.events?.[0]?.start;
                            if (!startRaw) return false;

                            let startDate;
                            // If it's a pure date string without time, treat as local day start
                            if (/^\d{4}-\d{2}-\d{2}$/.test(startRaw)) {
                              const [y, m, d] = startRaw.split('-').map(Number);
                              startDate = new Date(y, m - 1, d);
                            } else {
                              // Parse full datetime and convert to local date
                              startDate = new Date(startRaw);
                            }

                            const today = new Date();

                            return (
                              startDate.getFullYear() === today.getFullYear() &&
                              startDate.getMonth() === today.getMonth() &&
                              startDate.getDate() === today.getDate()
                            );
                          ]]]
                        styles:
                          card:
                            - background: var(--active-pop)
                          custom_fields:
                            day:
                              - color: var(--gray800)
                            time:
                              - color: var(--gray800)
                            date:
                              - color: var(--gray800)
                              - border-right: 1px solid var(--gray800)
                            event:
                              - color: var(--gray800)
                    styles:
                      grid:
                        - grid-template-areas: '"day ." "date time" "date event"'
                        - grid-template-columns: min-content 1fr
                      card:
                        - margin-top: '-10px'
                        - padding: 18px
                      custom_fields:
                        day:
                          - justify-self: start
                        time:
                          - justify-self: start
                          - font-size: 1.4em
                          - padding-left: 20px
                        date:
                          - justify-self: start
                          - font-size: 3em
                          - text-transform: uppercase
                          - padding-right: 20px
                          - border-right: 1px solid var(--pop)
                        event:
                          - justify-self: start
                          - padding-left: 20px
                    custom_fields:
                      day: |
                        [[[
                          return helpers.formatDateWeekday(entity.attributes.events[0].start)
                        ]]]
                      date: |
                        [[[
                          return helpers.formatDateShort(entity.attributes.events[0].start)
                        ]]]  
                      time: |
                        [[[
                          return helpers.formatTime24h(entity.attributes.events[0].start)
                        ]]] 
                      event: |
                        [[[
                          var summary = entity.attributes.events[0].summary;
                          if (summary && summary.length < 38) {
                          return summary;
                          }
                          else{return '<marquee behavior="scroll" scrollamount="10">' + summary + '</marquee>';
                          }
                        ]]]
                  - type: conditional
                    conditions:
                      - condition: numeric_state
                        entity: sensor.my_natibou_calendar
                        above: 1
                    card:
                      type: custom:button-card
                      entity: sensor.my_natibou_calendar
                      show_icon: false
                      show_name: false
                      styles:
                        grid:
                          - grid-template-areas: ' "date time" "date event"'
                          - grid-template-columns: min-content 1fr
                        card:
                          - padding: 18px
                          - margin-top: 5px
                        custom_fields:
                          time:
                            - justify-self: start
                            - font-size: 1em
                            - padding-left: 20px
                          date:
                            - justify-self: start
                            - font-size: 1.5em
                            - text-transform: uppercase
                            - padding-right: 20px
                            - border-right: 1px solid var(--pop)
                            - text-aligh: left
                          event:
                            - justify-self: start
                            - padding-left: 20px
                      custom_fields:
                        date: |
                          [[[
                            return helpers.formatDateShort(entity.attributes.events[1].start)
                          ]]]  
                        time: |
                          [[[
                            return helpers.formatTime24h(entity.attributes.events[1].start)
                          ]]] 
                        event: |
                          [[[
                            var summary = entity.attributes.events[1].summary;
                            if (summary && summary.length < 38) {
                            return summary;
                            }
                            else{return '<marquee behavior="scroll" scrollamount="10">' + summary + '</marquee>';
                            }
                          ]]]
                  - type: conditional
                    conditions:
                      - condition: numeric_state
                        entity: sensor.my_natibou_calendar
                        above: 2
                    card:
                      type: custom:button-card
                      entity: sensor.my_natibou_calendar
                      show_icon: false
                      show_name: false
                      styles:
                        grid:
                          - grid-template-areas: ' "date time" "date event"'
                          - grid-template-columns: min-content 1fr
                        card:
                          - padding: 18px
                          - margin-top: 5px
                        custom_fields:
                          time:
                            - justify-self: start
                            - font-size: 1em
                            - padding-left: 20px
                          date:
                            - justify-self: start
                            - font-size: 1.5em
                            - text-transform: uppercase
                            - padding-right: 20px
                            - border-right: 1px solid var(--pop)
                            - text-aligh: left
                          event:
                            - justify-self: start
                            - padding-left: 20px
                      custom_fields:
                        date: |
                          [[[
                            return helpers.formatDateShort(entity.attributes.events[2].start)
                          ]]]  
                        time: |
                          [[[
                            return helpers.formatTime24h(entity.attributes.events[2].start)
                          ]]] 
                        event: |
                          [[[
                            var summary = entity.attributes.events[2].summary;
                            if (summary && summary.length < 38) {
                            return summary;
                            }
                            else{return '<marquee behavior="scroll" scrollamount="10">' + summary + '</marquee>';
                            }
                          ]]]
                  - type: conditional
                    conditions:
                      - condition: numeric_state
                        entity: sensor.my_natibou_calendar
                        above: 3
                    card:
                      type: custom:button-card
                      entity: sensor.my_natibou_calendar
                      show_icon: false
                      show_name: false
                      styles:
                        grid:
                          - grid-template-areas: ' "date time" "date event"'
                          - grid-template-columns: min-content 1fr
                        card:
                          - padding: 18px
                          - margin-top: 5px
                        custom_fields:
                          time:
                            - justify-self: start
                            - font-size: 1em
                            - padding-left: 20px
                          date:
                            - justify-self: start
                            - font-size: 1.5em
                            - text-transform: uppercase
                            - padding-right: 20px
                            - border-right: 1px solid var(--pop)
                            - text-aligh: left
                          event:
                            - justify-self: start
                            - padding-left: 20px
                      custom_fields:
                        date: |
                          [[[
                            return helpers.formatDateShort(entity.attributes.events[3].start)
                          ]]]  
                        time: |
                          [[[
                            return helpers.formatTime24h(entity.attributes.events[3].start)
                          ]]] 
                        event: |
                          [[[
                            var summary = entity.attributes.events[3].summary;
                            if (summary && summary.length < 38) {
                            return summary;
                            }
                            else{return '<marquee behavior="scroll" scrollamount="10">' + summary + '</marquee>';
                            }
                          ]]]
            columns: 1
            grid_options:
              columns: 16
              rows: auto
          - type: custom:gap-card
            grid_options:
              columns: 2
              rows: auto
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                template: my_light_card
                entity: light.jardin_lumiere
                icon: mdi:grass
                name: extérieur
              - type: custom:button-card
                template: my_light_card
                entity: light.degagement_lampemurphy
                icon: mdi:wardrobe
                name: murphy
              - type: custom:button-card
                template: my_light_card
                entity: input_boolean.sdb_rdc_max2h
                icon: mdi:timer-refresh
                name: max 1h rdc
                custom_fields:
                  state: |
                    [[[
                      var state = entity.state;
                      var bouclage = states['switch.bouclage'].state;
                      var chauffage = states['switch.sdb_rdc_seche_serviettes'].state;

                      if (state === "on") {
                        return `<span>On</span>`;
                      }

                      if (state === "off") {
                        if (bouclage === "off" && chauffage === "off") {
                          return `<span>Off</span>`;
                        }
                        if (bouclage === "off" && chauffage === "on") {
                          return `Off<span style="font-size: 0.4em; font-weight: 500; color: var(--pop);">chauffage</span>`;
                        }
                        if (bouclage === "on" && chauffage === "off") {
                          return `Off<span style="font-size: 0.4em; font-weight: 500; color: var(--pop);">bouclage</span>`;
                        }
                        if (bouclage === "on" && chauffage === "on") {
                          return `Off<span style="font-size: 0.4em; font-weight: 500; color: var(--pop);">bouclage</span>`;
                        }
                      }

                      return `<span>Off</span>`; // Fallback in case of unexpected conditions
                    ]]]
              - type: custom:button-card
                template: my_light_card
                entity: input_boolean.sdb_etage_max2h
                icon: mdi:timer-refresh
                name: max 1h etage
                custom_fields:
                  state: |
                    [[[
                      var state = entity.state;
                      var bouclage = states['switch.bouclage'].state;
                      var chauffage = states['switch.sdb_etage_seche_serviettes'].state;

                      if (state === "on") {
                        return `<span>On</span>`;
                      }

                      if (state === "off") {
                        if (bouclage === "off" && chauffage === "off") {
                          return `<span>Off</span>`;
                        }
                        if (bouclage === "off" && chauffage === "on") {
                          return `Off<span style="font-size: 0.4em; font-weight: 500; color: var(--pop);">chauffage</span>`;
                        }
                        if (bouclage === "on" && chauffage === "off") {
                          return `Off<span style="font-size: 0.4em; font-weight: 500; color: var(--pop);">bouclage</span>`;
                        }
                        if (bouclage === "on" && chauffage === "on") {
                          return `Off<span style="font-size: 0.4em; font-weight: 500; color: var(--pop);">bouclage</span>`;
                        }
                      }

                      return `<span>Off</span>`; // Fallback in case of unexpected conditions
                    ]]]
              - type: custom:button-card
                template: my_light_card
                entity: input_boolean.arrosageauto
                icon: mdi:sprinkler
                name: arrosage
                custom_fields:
                  state: |
                    [[[
                      var state = entity.state;
                      var duree = states['counter.arrosage_restant'].state;
                      var moisture = states['sensor.jardin_capteurhumidite_soil_moisture'].state;
                      var texton = `${duree} min / ${moisture}%`;
                      var textoff = `Off / ${moisture}%`;

                      if (state == "on") {
                        return `${duree}min <span style="font-size: 0.4em; font-weight: 500; color: var(--pop);">${moisture}%</span>`;
                      } else {
                        return `Off <span style="font-size: 0.4em; font-weight: 500; color: var(--pop); ">${moisture}%</span>`;
                      }
                    ]]]
              - type: custom:button-card
                template: my_light_card
                entity: switch.jardin_switch_borne
                icon: mdi:ev-station
                name: borne
                custom_fields:
                  state: |
                    [[[
                      var state = entity.state;
                      var consumption = Math.floor(parseFloat(states['sensor.jardin_switch_borne_electric_consumption_w'].state) || 0);
                      var consumption_kW = Math.floor(consumption / 1000);  // Convert to kW and remove decimals
                      var text = "";

                      if (state == "on") {
                        if (consumption > 100) {
                          text = `En Charge à ${consumption_kW}kW`;
                        } else {
                          text = "En Attente";
                        }
                        return `<marquee style="white-space: nowrap; display: inline-block;">${text}</marquee>`;
                      } else {
                        return `<span>Off</span>`;
                      }
                    ]]]
              - type: custom:button-card
                entity: select.recroom_hub_activities
                icon: mdi:multimedia
                show_state: false
                show_icon: true
                show_name: true
                show_last_changed: false
                show_label: false
                variables:
                  color: var(--active-pop)
                styles:
                  grid:
                    - grid-template-areas: |
                        "n i"
                        "s i"
                        "action_card action_card"
                    - grid-template-columns: 1fr auto
                    - grid-template-rows: min-content 1fr
                  card:
                    - overflow: hidden
                    - padding: 10px
                    - pointer-events: none
                    - background: var(--gray000)
                    - position: relative
                  label:
                    - justify-self: start
                    - align-self: start
                    - font-family: Quicksand
                    - font-size: 12px
                    - font-weight: 500
                    - color: var(--gray800)
                  img_cell:
                    - position: absolute
                    - top: '-23px'
                    - right: '-13px'
                    - width: 80px
                    - height: 80px
                    - border-radius: 50%
                    - background: transparent
                  icon:
                    - width: 30px
                    - padding-top: 12px
                    - padding-right: 25px
                    - color: var(--gray800)
                    - opacity: 0.8
                  name:
                    - padding-left: 10px
                    - justify-self: start
                    - font-size: 1.5em
                    - font-weight: 400
                    - font-family: Quicksand
                    - letter-spacing: 0.3em
                state:
                  - value: power_off
                    name: 'off'
                  - value: Jouer a la PS5
                    name: PS5
                  - value: Regarder un film
                    name: film
                  - value: Jouer a la Switch
                    name: Switch
                custom_fields:
                  action_card:
                    card:
                      type: custom:button-card
                      styles:
                        grid:
                          - grid-template-areas: '"item1 item2 item3 item4"'
                          - grid-template-columns: repeat(4, 1fr)
                          - row-gap: 10px
                        card:
                          - margin-top: 10px
                          - padding: 5px
                          - border-radius: 50px
                          - background-color: var(--gray200)
                      custom_fields:
                        item1:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:power
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: power_off
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: power_off
                        item2:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:sony-playstation
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: Jouer a la PS5
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: Jouer a la PS5
                        item3:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:nintendo-switch
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: Jouer a la Switch
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: Jouer a la Switch
                        item4:
                          card:
                            type: custom:button-card
                            entity: '[[[ return entity.entity_id ]]]'
                            show_name: false
                            show_state: false
                            icon: mdi:movie-open
                            styles:
                              icon:
                                - width: 25px
                                - color: var(--gray800)
                              card:
                                - padding: 10px
                                - border-radius: 500px
                                - box-shadow: none
                                - pointer-events: auto
                                - background: none
                            state:
                              - value: Regarder un film
                                styles:
                                  card:
                                    - background: var(--active-pop)
                                  icon:
                                    - color: var(--gray800)
                            tap_action:
                              action: call-service
                              service: select.select_option
                              target:
                                entity_id: '[[[ return entity.entity_id ]]]'
                              data:
                                option: Regarder un film
                view_layout:
                  grid-area: select
              - type: custom:gap-card
                height: 70
            columns: 1
            grid_options:
              columns: 8
              rows: auto
        column_span: 6
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#lumieres'
                show_header: true
                width_desktop: 70%
              - type: custom:button-card
                template: hc_title_card
                name: é t a g e
                label: <subtitle>
                variables:
                  entity1: <entity>
                  entity1_name: <entity name>
                styles:
                  card:
                    - padding: 5px 10px 5px 10px
                    - margin-bottom: '-30px'
                  name:
                    - font-size: 1.2em
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.degagement_lampemurphy
                    icon: mdi:wardrobe
                    name: Murphy
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.lampes_faustine
                    icon: mdi:crown
                    name: Faustine
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.wled_theodore
                    icon: mdi:deathly-hallows
                    name: Théodore
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.natibou_ventilateur
                    icon: mdi:ceiling-fan-light
                    name: Natibou
                columns: 5
              - type: custom:gap-card
                height: 5
              - type: custom:button-card
                template: hc_title_card
                name: rdc
                label: <subtitle>
                variables:
                  entity1: <entity>
                  entity1_name: <entity name>
                styles:
                  card:
                    - padding: 5px 10px 5px 10px
                    - margin-bottom: '-30px'
                  name:
                    - font-size: 1.2em
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.salon_lumieres
                    icon: mdi:sofa
                    name: salon
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.lumiere_sejour
                    icon: mdi:table-furniture
                    name: séjour
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.bureautibou_ampoule
                    icon: mdi:desk
                    name: bureau
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.lumieres_ambiance
                    icon: mdi:lamps
                    name: ambiance
                columns: 5
              - type: custom:gap-card
                height: 5
              - type: custom:button-card
                template: hc_title_card
                name: sous-sol
                label: <subtitle>
                variables:
                  entity1: <entity>
                  entity1_name: <entity name>
                styles:
                  card:
                    - padding: 5px 10px 5px 10px
                    - margin-bottom: '-30px'
                  name:
                    - font-size: 1.2em
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.wled_canape
                    icon: mdi:death-star-variant
                    name: g0m Cave
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.shelly1_485519c9a2f1
                    icon: mdi:multimedia
                    name: Salle Ciné
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.recroom_kallax
                    icon: mdi:bookshelf
                    name: Kalllax
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.atelier_lampe
                    icon: mdi:tools
                    name: Atelier
                  - type: custom:button-card
                    template: my_light_card
                    entity: light.jardin_lampeperon
                    icon: mdi:grass
                    name: Jardin
                columns: 5
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#volets'
                show_header: true
                width_desktop: 90%
              - type: custom:button-card
                template: hc_title_card
                name: é t a g e
                label: <subtitle>
                variables:
                  entity1: <entity>
                  entity1_name: <entity name>
                styles:
                  card:
                    - padding: 5px 10px 5px 10px
                    - margin-bottom: '-30px'
                  name:
                    - font-size: 1.2em
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.velux_external_cover_roller_shutter_2
                    name: Théodore
                    show_label: true
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.chambre_natibou_volet_fenetre
                    name: Natibou
                    show_label: true
                columns: 5
              - type: custom:button-card
                template: hc_title_card
                name: rdc
                label: <subtitle>
                variables:
                  entity1: <entity>
                  entity1_name: <entity name>
                styles:
                  card:
                    - padding: 5px 10px 5px 10px
                    - margin-bottom: '-30px'
                  name:
                    - font-size: 1.2em
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.salon_volet_fenetre
                    name: salon
                    show_label: true
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.sdb_rdc_volet_fenetre
                    name: |
                      [[[
                          return `<marquee style="white-space: nowrap; display: inline-block;">salle de bain</marquee>`;

                      ]]]
                    show_label: true
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.salle_a_manger_volet_fenetre
                    name: |
                      [[[
                          return `<marquee style="white-space: nowrap; display: inline-block;">fenêtre séjour</marquee>`;

                      ]]]
                    show_label: true
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.salle_a_manger_volet_baie_2
                    name: baie séjour
                    show_label: true
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.cuisine_volet_fenetre
                    name: |
                      [[[
                          return `<marquee style="white-space: nowrap; display: inline-block;">fenêtre cuisine</marquee>`;

                      ]]]
                    show_label: true
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.cuisine_volet_porte
                    name: |
                      [[[
                          return `<marquee style="white-space: nowrap; display: inline-block;">porte cuisine</marquee>`;

                      ]]]
                    show_label: true
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.bureau_tibou_volet_sud
                    name: bureau sud
                    show_label: true
                  - type: custom:button-card
                    template: hc_blind_card
                    entity: cover.bureau_tibou_volet_ouest
                    name: |
                      [[[
                          return `<marquee style="white-space: nowrap; display: inline-block;">baie ouest</marquee>`;

                      ]]]
                    show_label: true
                columns: 5
              - type: custom:gap-card
                height: 5
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#alfred'
                show_header: true
                width_desktop: 80%
                trigger: []
                close_action:
                  action: perform-action
                  perform_action: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.vider_bac_poussiere
                auto_close: '30000'
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.vider_bac_poussiere
                    state: 'on'
                card:
                  type: custom:button-card
                  template: hc_title_card
                  name: Vider le bac à poussière du robot!
                  label: <subtitle>
                  variables:
                    entity1: <entity>
                    entity1_name: <entity name>
                  styles:
                    name:
                      - color: var(--pop)
                    card:
                      - padding: 5px 10px 5px 10px
                      - margin-bottom: '-40px'
                  card_mod:
                    style: |
                      ha-card {
                        background: var(gray-000);
                        --ha-card-border-width: 0;
                      }
              - type: custom:vacuum-card
                entity: vacuum.alfred
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                width_desktop: 100%
                card_type: pop-up
                name: Energie
                icon: mdi:view-day
                state: null
                hash: '#energie'
                is_sidebar_hidden: true
                styles: >-
                  .bubble-pop-up-container {
                    --vertical-stack-card-gap: 0px!important;
                  } #header-container > div > div {
                    background: var(--popupBG)!important;
                  }     

                  #header-container > button {background: none;}    

                  .icon-container {background-color:var(--gray800)!important;} 

                  .icon-container > ha-icon
                  {color:var(--gray000)!important;opacity:1!important}

                  .bubble-icon {
                    --mdc-icon-size: 24px !important;
                  }
                bg_blur: '20'
                shadow_opacity: '20'
                bg_opacity: '88'
                margin_top_mobile: 50px
                margin_top_desktop: 50px
                card_layout: large
                show_header: false
              - square: false
                type: grid
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:local-conditional-card
                        id: jour
                        default: show
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:layout-card
                              layout_type: custom:grid-layout
                              layout:
                                grid-template-columns: 1fr max-content max-content max-content 1fr
                                grid-template-rows: min-content
                                grid-template-areas: |
                                  "one two three four five"  
                              cards:
                                - type: custom:button-card
                                  template: chips_medium_active
                                  view_layout:
                                    grid-area: two
                                  variables:
                                    name: jour
                                    icon: mdi:view-day
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: show
                                        - mois: hide
                                        - année: hide
                                - type: custom:button-card
                                  template: chips_medium
                                  view_layout:
                                    grid-area: three
                                  variables:
                                    name: mois
                                    icon: mdi:calendar-month
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: hide
                                        - mois: show
                                        - année: hide
                                - type: custom:button-card
                                  template: chips_medium
                                  view_layout:
                                    grid-area: four
                                  variables:
                                    name: année
                                    icon: mdi:calendar-start
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: hide
                                        - mois: hide
                                        - année: show
                            - type: custom:gap-card
                              height: 6
                            - type: custom:apexcharts-card
                              chart_type: donut
                              update_interval: 5min
                              header:
                                show: false
                                title: Coût EDF
                                show_states: true
                                colorize_states: true
                              stacked: true
                              series:
                                - entity: sensor.cout_ballon_daily
                                  color: RGB(186, 144, 255)
                                  name: Ballon
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.salleserveur_compteur_serveur_daily_energy_cost_3
                                  color: RGB(255, 178, 102)
                                  name: Serveur
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.buanderie_prise_lavelinge_daily_energy_cost
                                  color: RGB(135, 206, 250)
                                  name: Lave_Linge
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.bureaunathieu_prise_pc_daily_energy_cost
                                  color: RGB(255, 229, 102)
                                  name: PC
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.cuisine_prise_lavevaisselle_daily_energy_cost
                                  color: RGB(102, 204, 204)
                                  name: Lave-vaisselle
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: sensor.compteur_ev_mokka_daily_energy_cost_2
                                  color: RGB(255, 127, 127)
                                  name: Mokka
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: sensor.compteur_ev_tesla_daily_energy_cost_2
                                  color: RGB(144, 238, 144)
                                  name: Tesla
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: sensor.cuisine_prise_frigo_daily_energy_cost
                                  color: RGB(255, 160, 200)
                                  name: Frigo
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.puissance_non_trackee_daily_energy_cost
                                  color: rgb(214, 215, 217)
                                  name: Autres
                                  show:
                                    legend_value: true
                                    datalabels: true
                              apex_config:
                                legend:
                                  show: true
                                states:
                                  foreColor: '#FFFFFF'
                                chart:
                                  foreColor: '#FFFFFF'
                                dataLabels:
                                  formatter: |
                                    EVAL:function(value) {
                                      return value.toFixed(0) + " %";
                                    }
                                plotOptions:
                                  pie:
                                    donut:
                                      labels:
                                        show: true
                                        total:
                                          show: true
                                          label: Total
                                          formatter: |
                                            EVAL:function(w) {
                                              return w.globals.seriesTotals.reduce((a, b) => {return (a + b)} , 0).toFixed(1) + "eur"
                                              }
                      - type: custom:local-conditional-card
                        id: mois
                        default: hide
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:layout-card
                              layout_type: custom:grid-layout
                              layout:
                                grid-template-columns: 1fr max-content max-content max-content 1fr
                                grid-template-rows: min-content
                                grid-template-areas: |
                                  "one two three four five"  
                              cards:
                                - type: custom:button-card
                                  template: chips_medium
                                  view_layout:
                                    grid-area: two
                                  variables:
                                    name: jour
                                    icon: mdi:view-day
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: show
                                        - mois: hide
                                        - année: hide
                                - type: custom:button-card
                                  template: chips_medium_active
                                  view_layout:
                                    grid-area: three
                                  variables:
                                    name: mois
                                    icon: mdi:calendar-month
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: hide
                                        - mois: show
                                        - année: hide
                                - type: custom:button-card
                                  template: chips_medium
                                  view_layout:
                                    grid-area: four
                                  variables:
                                    name: année
                                    icon: mdi:calendar-start
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: hide
                                        - mois: hide
                                        - année: show
                            - type: custom:gap-card
                              height: 6
                            - type: custom:apexcharts-card
                              chart_type: donut
                              update_interval: 5min
                              header:
                                show: false
                                title: Coût EDF
                                show_states: true
                                colorize_states: true
                              stacked: true
                              series:
                                - entity: sensor.cout_ballon_monthly
                                  color: RGB(186, 144, 255)
                                  name: Ballon
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.salleserveur_compteur_serveur_monthly_energy_cost_3
                                  color: RGB(255, 178, 102)
                                  name: Serveur
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.buanderie_prise_lavelinge_monthly_energy_cost
                                  color: RGB(135, 206, 250)
                                  name: Lave_Linge
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.bureaunathieu_prise_pc_monthly_energy_cost
                                  color: RGB(255, 229, 102)
                                  name: PC
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.cuisine_prise_lavevaisselle_monthly_energy_cost
                                  color: RGB(102, 204, 204)
                                  name: Lave-vaisselle
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.compteur_ev_mokka_monthly_energy_cost_2
                                  color: RGB(255, 127, 127)
                                  name: Mokka
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.compteur_ev_tesla_monthly_energy_cost_2
                                  color: RGB(144, 238, 144)
                                  name: Tesla
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.cuisine_prise_frigo_monthly_energy_cost
                                  color: RGB(255, 160, 200)
                                  name: Frigo
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.puissance_non_trackee_monthly_energy_cost
                                  color: rgb(214, 215, 217)
                                  name: Autres
                                  show:
                                    legend_value: true
                                    datalabels: true
                              apex_config:
                                legend:
                                  show: true
                                states:
                                  foreColor: '#FFFFFF'
                                chart:
                                  foreColor: '#FFFFFF'
                                dataLabels:
                                  formatter: |
                                    EVAL:function(value) {
                                      return value.toFixed(0) + " %";
                                    }
                                plotOptions:
                                  pie:
                                    donut:
                                      labels:
                                        show: true
                                        total:
                                          show: true
                                          label: Total
                                          formatter: |
                                            EVAL:function(w) {
                                              return w.globals.seriesTotals.reduce((a, b) => {return (a + b)} , 0).toFixed(1) + "eur"
                                              }
                      - type: custom:local-conditional-card
                        id: année
                        default: hide
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:layout-card
                              layout_type: custom:grid-layout
                              layout:
                                grid-template-columns: 1fr max-content max-content max-content 1fr
                                grid-template-rows: min-content
                                grid-template-areas: |
                                  "one two three four five"  
                              cards:
                                - type: custom:button-card
                                  template: chips_medium
                                  view_layout:
                                    grid-area: two
                                  variables:
                                    name: jour
                                    icon: mdi:view-day
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: show
                                        - mois: hide
                                        - année: hide
                                - type: custom:button-card
                                  template: chips_medium
                                  view_layout:
                                    grid-area: three
                                  variables:
                                    name: mois
                                    icon: mdi:calendar-month
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: hide
                                        - mois: show
                                        - année: hide
                                - type: custom:button-card
                                  template: chips_medium_active
                                  view_layout:
                                    grid-area: four
                                  variables:
                                    name: année
                                    icon: mdi:calendar-start
                                  tap_action:
                                    action: fire-dom-event
                                    local_conditional_card:
                                      action: set
                                      ids:
                                        - jour: hide
                                        - mois: hide
                                        - année: show
                            - type: custom:gap-card
                              height: 6
                            - type: custom:apexcharts-card
                              chart_type: donut
                              update_interval: 5min
                              header:
                                show: false
                                title: Coût EDF
                                show_states: true
                                colorize_states: true
                              stacked: true
                              series:
                                - entity: sensor.cout_ballon_yearly
                                  color: RGB(186, 144, 255)
                                  name: Ballon
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: sensor.conso_serveur_corrigee
                                  color: RGB(255, 178, 102)
                                  name: Serveur
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.buanderie_prise_lavelinge_yearly_energy_cost
                                  color: RGB(135, 206, 250)
                                  name: Lave_Linge
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.bureaunathieu_prise_pc_yearly_energy_cost
                                  color: RGB(255, 229, 102)
                                  name: PC
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.cuisine_prise_lavevaisselle_yearly_energy_cost
                                  color: RGB(102, 204, 204)
                                  name: Lave-vaisselle
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.compteur_ev_mokka_yearly_energy_cost_2
                                  color: RGB(255, 127, 127)
                                  name: Mokka
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.compteur_ev_tesla_yearly_energy_cost_2
                                  color: RGB(144, 238, 144)
                                  name: Tesla
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.cuisine_prise_frigo_yearly_energy_cost
                                  color: RGB(255, 160, 200)
                                  name: Frigo
                                  show:
                                    legend_value: true
                                    datalabels: true
                                - entity: >-
                                    sensor.puissance_non_trackee_yearly_energy_cost
                                  color: rgb(214, 215, 217)
                                  name: Autres
                                  show:
                                    legend_value: true
                                    datalabels: true
                              apex_config:
                                legend:
                                  show: true
                                states:
                                  foreColor: '#FFFFFF'
                                chart:
                                  foreColor: '#FFFFFF'
                                dataLabels:
                                  formatter: |
                                    EVAL:function(value) {
                                      return value.toFixed(0) + " %";
                                    }
                                plotOptions:
                                  pie:
                                    donut:
                                      labels:
                                        show: true
                                        total:
                                          show: true
                                          label: Total
                                          formatter: |
                                            EVAL:function(w) {
                                              return w.globals.seriesTotals.reduce((a, b) => {return (a + b)} , 0).toFixed(1) + "eur"
                                              }
                  - type: vertical-stack
                    cards:
                      - type: energy-date-selection
                        card_mod:
                          style: >
                            ha-card {
                              background: none;
                              box-shadow: none;
                            }

                            ha-card > div > hui-energy-period-selector $ div >
                            .label {font-size:10px!important }

                            }
                      - type: energy-sources-table
                        card_mod:
                          style: >
                            ha-card > div > div > table > tbody >
                            tr:nth-child(1) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--yellow-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(2) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--orange-RGB),1) !important;
                              border: transparent;
                            }       

                            ha-card > div > div > table > tbody >
                            tr:nth-child(4) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--blue-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(5) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--blue-dark-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(6) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--gray600-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(7) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--gray800-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(8) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--pink-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(9) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--pop-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(11) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--green-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(12) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--cyan-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card > div > div > table > tbody >
                            tr:nth-child(13) >

                            td.mdc-data-table__cell.cell-bullet > div {
                              background: rgba(var(--cyan2-RGB),1) !important;
                              border: transparent;
                            }

                            ha-card {
                              background-color: transparent;
                              border: transparent;
                  - type: vertical-stack
                    cards:
                      - type: energy-usage-graph
                        energy-grid-consumption-color-0: rgba(var(--blue-RGB),0.4)
                        energy-grid-consumption-color-1: rgba(var(--blue-RGB),0.7)
                        energy-grid-consumption-color-2: rgba(var(--my-grey),0.2)
                        energy-grid-consumption-color-3: rgba(var(--my-grey),0.4)
                        energy-grid-consumption-color-4: rgba(var(--my-red),0.4)
                        energy-grid-consumption-color-5: rgba(var(--my-red),0.7)
                      - type: energy-gas-graph
                        style: |
                          ha-card {
                            background-color: transparent;
                            border: transparent;
                      - type: energy-water-graph
                        style: |
                          ha-card {
                            background-color: transparent;
                            border: transparent;
                columns: 3
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#menu'
                show_header: false
                width_desktop: 80%
                trigger: []
                close_action:
                  action: perform-action
                  perform_action: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.vider_bac_poussiere
                auto_close: ''
                close_by_clicking_outside: true
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 3fr 1fr
                  grid-template-rows: min-content
                  grid-template-areas: |
                    "one two" 
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:state-switch
                        entity: input_select.jour_menu
                        default: samedi
                        states:
                          samedi:
                            type: custom:button-card
                            template: my_menu_card_active
                            entity: sensor.menu_samedi_2
                          dimanche:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_samedi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: samedi
                          lundi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_samedi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: samedi
                          mardi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_samedi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: samedi
                          mercredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_samedi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: samedi
                          jeudi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_samedi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: samedi
                          vendredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_samedi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: samedi
                      - type: custom:state-switch
                        entity: input_select.jour_menu
                        default: samedi
                        states:
                          samedi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_dimanche_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: dimanche
                          dimanche:
                            type: custom:button-card
                            template: my_menu_card_active
                            entity: sensor.menu_dimanche_2
                          lundi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_dimanche_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: dimanche
                          mardi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_dimanche_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: dimanche
                          mercredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_dimanche_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: dimanche
                          jeudi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_dimanche_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: dimanche
                          vendredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_dimanche_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: dimanche
                      - type: custom:state-switch
                        entity: input_select.jour_menu
                        default: samedi
                        states:
                          samedi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_lundi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: lundi
                          dimanche:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_lundi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: lundi
                          lundi:
                            type: custom:button-card
                            template: my_menu_card_active
                            entity: sensor.menu_lundi_2
                          mardi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_lundi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: lundi
                          mercredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_lundi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: lundi
                          jeudi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_lundi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: lundi
                          vendredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_lundi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: lundi
                      - type: custom:state-switch
                        entity: input_select.jour_menu
                        default: samedi
                        states:
                          samedi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mardi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mardi
                          dimanche:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mardi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mardi
                          lundi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mardi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mardi
                          mardi:
                            type: custom:button-card
                            template: my_menu_card_active
                            entity: sensor.menu_mardi_2
                          mercredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mardi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mardi
                          jeudi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mardi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mardi
                          vendredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mardi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mardi
                      - type: custom:state-switch
                        entity: input_select.jour_menu
                        default: samedi
                        states:
                          samedi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mercredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mercredi
                          dimanche:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mercredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mercredi
                          lundi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mercredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mercredi
                          mardi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mercredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mercredi
                          mercredi:
                            type: custom:button-card
                            template: my_menu_card_active
                            entity: sensor.menu_mercredi_2
                          jeudi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mercredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mercredi
                          vendredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_mercredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: mercredi
                      - type: custom:state-switch
                        entity: input_select.jour_menu
                        default: samedi
                        states:
                          samedi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_jeudi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: jeudi
                          dimanche:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_jeudi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: jeudi
                          lundi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_jeudi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: jeudi
                          mardi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_jeudi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: jeudi
                          mercredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_jeudi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: jeudi
                          jeudi:
                            type: custom:button-card
                            template: my_menu_card_active
                            entity: sensor.menu_jeudi_2
                          vendredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_jeudi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: jeudi
                      - type: custom:state-switch
                        entity: input_select.jour_menu
                        default: samedi
                        states:
                          samedi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_vendredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: vendredi
                          dimanche:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_vendredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: vendredi
                          lundi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_vendredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: vendredi
                          mardi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_vendredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: vendredi
                          mercredi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_vendredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: vendredi
                          jeudi:
                            type: custom:button-card
                            template: my_menu_card
                            entity: sensor.menu_vendredi_2
                            tap_action:
                              action: call-service
                              service: input_select.select_option
                              target:
                                entity_id: input_select.jour_menu
                              data:
                                option: vendredi
                          vendredi:
                            type: custom:button-card
                            template: my_menu_card_active
                            entity: sensor.menu_vendredi_2
                    view_layout:
                      grid-area: one
                  - display_order: none
                    view_layout:
                      grid-area: two
                    type: todo-list
                    entity: todo.shopping_list
                    theme: cuisine
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Bambu
                icon: mdi:printer-3d-nozzle
                state: sensor.p1p_01s00c370500195_gcode_filename
                hash: '#bambu'
                is_sidebar_hidden: true
                styles: >-
                  .bubble-pop-up-container {
                    --vertical-stack-card-gap: 0px!important;
                  } #header-container > div > div {
                    background: var(--popupBG)!important;
                  }     

                  #header-container > button {background: none;}    

                  .icon-container {background-color:var(--gray800)!important;} 

                  .icon-container > ha-icon
                  {color:var(--gray000)!important;opacity:1!important}

                  .bubble-icon {
                    --mdc-icon-size: 24px !important;
                  }
                bg_blur: '20'
                shadow_opacity: '20'
                bg_opacity: '88'
                margin_top_mobile: 50px
                margin_top_desktop: 50px
                card_layout: large
                show_header: false
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    template: sensor_big
                    entity: sensor.p1p_01s00c370500195_bed_temperature
                    styles:
                      label:
                        - color: var(--gray800)
                        - font-size: 2em
                        - font-weight: 400
                      name:
                        - color: var(--gray800)
                      icon:
                        - color: var(--gray800)
                    variables:
                      label: |
                        [[[
                          return `${(Math.round(entity.state))}`;
                        ]]]
                      name: ℃
                      icon: mdi:heat-wave
                  - type: custom:button-card
                    template: sensor_big
                    entity: sensor.p1p_01s00c370500195_nozzle_temperature
                    styles:
                      label:
                        - color: var(--gray800)
                        - font-size: 2em
                        - font-weight: 400
                      name:
                        - color: var(--gray800)
                      icon:
                        - color: var(--gray800)
                    variables:
                      label: |
                        [[[
                          return `${(Math.round(entity.state))}`;
                        ]]]
                      name: ℃
                      icon: mdi:printer-3d-nozzle-heat
                  - type: custom:button-card
                    template: sensor_big_percentage
                    variables:
                      name: Restantes
                      entity: sensor.p1p_01s00c370500195_remaining_time
                      icon: mdi:timer-check
                      background: var(--popupBG)
                      bar: >
                        [[[   var color = "var(--active-orange)";  var state =
                        states['sensor.p1p_01s00c370500195_print_progress'].state; 
                        if (state >= 85) color = "var(--active-green)";  else
                        if(state <= 35)  color = "var(--active-pop)";

                        return  `<div> <div style="background:${color}; height:
                        30px;width:${state}%; "></div></div>` ]]]
                      label: >
                        [[[ return
                        Math.round((states['sensor.p1p_01s00c370500195_remaining_time'].state))
                        + '<span style="font-size:14px"> min</span>' ]]]
                columns: 3
              - type: custom:advanced-camera-card
                cameras:
                  - camera_entity: camera.camerabambu_clear
                menu:
                  buttons:
                    iris:
                      enabled: false
                    cameras:
                      enabled: false
                    substreams:
                      enabled: false
                    live:
                      enabled: false
                  style: none
                view:
                  default: live
                  camera_select: live
                status_bar:
                  items:
                    title:
                      enabled: false
              - type: custom:advanced-camera-card
                cameras:
                  - camera_entity: camera.salle_serveur_p1p_camera
                menu:
                  buttons:
                    iris:
                      enabled: false
                    cameras:
                      enabled: false
                    substreams:
                      enabled: false
                    live:
                      enabled: false
                  style: none
                view:
                  default: live
                status_bar:
                  items:
                    title:
                      enabled: false
              - square: true
                type: grid
                cards:
                  - type: custom:button-card
                    template: button_trigger
                    tap_action:
                      action: button.press
                      target:
                        entity_id: button.p1p_01s00c370500195_stop_printing
                      data: {}
                    variables:
                      background: var(--active-pop)
                      name: Pause
                      icon: mdi:pause
                      entity: button.p1p_01s00c370500195_stop_printing
                    styles:
                      icon:
                        - color: var(--gray800)
                      name:
                        - color: var(--gray800)
                  - type: custom:button-card
                    template: button_trigger
                    tap_action:
                      action: button.press
                      target:
                        entity_id: button.p1p_01s00c370500195_pause_printing
                      data: {}
                    variables:
                      background: var(--active-pop)
                      name: Stop
                      icon: mdi:stop
                      entity: button.p1p_01s00c370500195_pause_printing
                    styles:
                      icon:
                        - color: var(--gray800)
                      name:
                        - color: var(--gray800)
                  - type: custom:button-card
                    template: button_trigger
                    tap_action:
                      action: button.press
                      target:
                        entity_id: button.p1p_01s00c370500195_resume_printing
                      data: {}
                    variables:
                      background: var(--active-pop)
                      name: Reprise
                      icon: mdi:play
                      entity: button.p1p_01s00c370500195_resume_printing
                    styles:
                      icon:
                        - color: var(--gray800)
                      name:
                        - color: var(--gray800)
                columns: 3
              - type: custom:gap-card
                height: 40
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                width_desktop: 70%
                card_type: pop-up
                name: ''
                icon: ''
                state: null
                hash: '#voitures'
                is_sidebar_hidden: true
                styles: >-
                  .bubble-pop-up-container {
                    --vertical-stack-card-gap: 0px!important;
                  } #header-container > div > div {
                    background: var(--popupBG)!important;
                  }     

                  #header-container > button {background: none;}    

                  .icon-container {background-color:var(--gray800)!important;} 

                  .icon-container > ha-icon
                  {color:var(--gray000)!important;opacity:1!important}

                  .bubble-icon {
                    --mdc-icon-size: 24px !important;
                  }
                bg_blur: '20'
                shadow_opacity: '20'
                bg_opacity: '88'
                margin_top_mobile: 50px
                margin_top_desktop: 50px
                card_layout: large
                show_header: true
              - type: grid
                columns: 2
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:button-card
                        template: hc_title_card
                        name: t e s l a
                        label: <subtitle>
                        variables:
                          entity1: <entity>
                          entity1_name: <entity name>
                        styles:
                          card:
                            - padding: 5px 10px 5px 10px
                            - margin-bottom: '-40px'
                      - type: custom:gap-card
                        height: 20
                      - type: grid
                        square: false
                        columns: 2
                        cards:
                          - type: custom:button-card
                            template: sensor_big_percentage
                            variables:
                              name: Battery
                              entity: sensor.battery
                              icon: mdi:battery
                              bar: >
                                [[[   var color = "var(--active-orange)";  var
                                state = entity.state;  if (state >= 60) color =
                                "var(--active-green)";  else if(state <= 35) 
                                color = "var(--active-pop)";

                                return  `<div> <div style="background:${color};
                                height: 30px;width:${state}%; "></div></div>`
                                ]]]
                              label: >
                                [[[ return
                                Math.round((states['sensor.battery'].state)) +
                                '<span style="font-size:14px"> %</span>' ]]]
                          - type: custom:button-card
                            template: sensor_big_percentage
                            variables:
                              name: Autonomie
                              entity: sensor.battery
                              icon: mdi:map-marker-distance
                              bar: >
                                [[[   var color = "var(--active-orange)";  var
                                state = entity.state;  if (state >= 60) color =
                                "var(--active-green)";  else if(state <= 35) 
                                color = "var(--active-pop)";

                                return  `<div> <div style="background:${color};
                                height: 30px;width:${state}%; "></div></div>`
                                ]]]
                              label: >
                                [[[ return
                                Math.round((states['sensor.range'].state)) +
                                '<span style="font-size:14px"> km</span>' ]]]
                          - type: custom:button-card
                            template: sensor_big
                            variables:
                              name: Kilométrage
                              entity: sensor.odometer
                              icon: mdi:counter
                              label: >
                                [[[ return
                                Math.round((states['sensor.odometer'].state)) +
                                '<span style="font-size:14px"> km</span>' ]]]
                          - type: custom:button-card
                            template: sensor_big
                            icon: phu:tesla-car
                            variables:
                              name: |
                                [[[
                                  if (states['binary_sensor.charger'].state === 'off') {
                                    return 'Débranchée';
                                  } else if (states['binary_sensor.charger'].state === 'on' && states['binary_sensor.charging'].state === 'off') {
                                    return 'En attente de charge';
                                  } else if (states['binary_sensor.charger'].state === 'on' && states['binary_sensor.charging'].state === 'on') {
                                    return 'En charge à ' + Math.round(states['sensor.charger_power'].state) + ' kW';
                                  } else {

                                  }
                                ]]]
                              label: Tesla
                      - type: custom:gap-card
                        height: 20
                      - type: thermostat
                        entity: climate.hvac_climate_system
                        features:
                          - type: climate-hvac-modes
                          - type: climate-preset-modes
                            style: dropdown
                        name: Climatisation
                  - type: vertical-stack
                    cards:
                      - type: custom:button-card
                        template: hc_title_card
                        name: m o k k a
                        label: <subtitle>
                        variables:
                          entity1: <entity>
                          entity1_name: <entity name>
                        styles:
                          card:
                            - padding: 5px 10px 5px 10px
                            - margin-bottom: '-40px'
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#tempo'
                show_header: true
                width_desktop: 40%
              - type: vertical-stack
                cards:
                  - square: false
                    type: grid
                    cards:
                      - type: custom:mushroom-template-card
                        primary: >-
                          {{states('sensor.rte_tempo_cycle_jours_restants_bleu')|round(0)}}j
                          restants
                        icon_color: var(--blue-dark-RGB)
                        icon: mdi:lightning-bolt-circle
                        entity: sensor.rte_tempo_cycle_jours_restants_bleu
                        multiline_secondary: true
                        layout: vertical
                      - type: custom:mushroom-template-card
                        primary: >-
                          {{states('sensor.rte_tempo_cycle_jours_restants_blanc')|round(0)}}j
                          restants
                        icon_color: var(--gray800-RGB)
                        icon: mdi:lightning-bolt-circle
                        entity: sensor.rte_tempo_cycle_jours_restants_blanc
                        multiline_secondary: true
                        layout: vertical
                      - type: custom:mushroom-template-card
                        primary: >-
                          {{states('sensor.rte_tempo_cycle_jours_restants_rouge')|round(0)}}j
                          restants
                        icon_color: var(--pop-RGB)
                        icon: mdi:lightning-bolt-circle
                        entity: sensor.rte_tempo_cycle_jours_restants_rouge
                        multiline_secondary: true
                        layout: vertical
                    columns: 3
                  - initial_view: listWeek
                    type: calendar
                    entities:
                      - calendar.rte_tempo_calendrier
    cards: []
